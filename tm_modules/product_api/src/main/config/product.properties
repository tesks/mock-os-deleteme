#
# AMMOS Mission Data Processing and Control System (AMPCS)
# Initial Author: D. Eckels
# Creation Date: 05/23/17
#
# Copyright (c) 2006-2017. California Institute of Technology.
# ALL RIGHTS RESERVED.
# U.S. Government sponsorship acknowledged.
#
# This software is subject to U. S. export control laws and
# regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
# extent that the software is subject to U.S. export control laws
# and regulations, the recipient has the responsibility to obtain
# export licenses or other export authority as may be required
# before exporting such information to foreign countries or
# providing access to foreign nationals.
# 
# This is the AMPCS properties file containing properties productBuilder
# operations
#
# This file is loaded using the standard AMPCS configuration file search
# mechanism, which typically looks first at the AMPCS system configuration 
# level, then at the project/mission configuration level, then at the user 
# configuration level. All properties files that are found will be loaded 
# in this order, with any configuration properties specified in later files 
# overriding those found in earlier files. It is not necessary to override
# all properties at the project or user level. If properties are omitted
# at any level, the property values loaded at the previous level remain in
# effect.
#
# Properties and their corresponding values must be included on a single line.
#
# Change Notes:

########################################################
product.categoryDescription=Product properties are used to configure the behavior of the legacy product file builder (not CFDP). A mission product \
viewer directory can also be configured here.

product.assembly.blockDescription=Properties that configure when product files are produced, whether they are validated, and how EPDUs are handled.

product.assembly.check.embeddedEpdu.description=If true, check for embedded EPDU in DPDU packets. This allows the processing of combined DPDU/EPDU packets.
product.assembly.check.embeddedEpdu.validValues=true | false
product.assembly.check.embeddedEpdu=false

product.assembly.forcePartial.change.description=Enables/disables whether partials should be forced out when there is a product APID change in the telemetry stream
product.assembly.forcePartial.change.validValues=true | false
product.assembly.forcePartial.change=true

product.assembly.forcePartial.epdu.description=Enables/disables whether partials should be forced out when an END PDU is received regardless of whether all parts of the product have been received or not
product.assembly.forcePartial.epdu.validValues=true | false
product.assembly.forcePartial.epdu=false

product.assembly.forcePartial.timeout.description=Timeout for partial product creation, seconds. If no new packet for the product is received in this time, a partial will be generated.
product.assembly.forcePartial.timeout.validValues= 1 to Integer.MAX_VALUE
product.assembly.forcePartial.timeout=300

product.assembly.validate.checksum.description=Indicates whether product file checksums should be validated.
product.assembly.validate.checksum.validValues=true | false
product.assembly.validate.checksum=false

product.assembly.validate.checksum.algorithm.description=Indicates which checksum algorithm to use on products.
product.assembly.validate.checksum.algorithm.validValues=cfdp | crc32 | msl
product.assembly.validate.checksum.algorithm=cfdp

product.channelize.blockDescription=Properties that affect extraction of telemetry channels from products. Applies only if product files are built \
from Data Product Objects (DPOs).

product.channelize.description=Enables/disables the generation of channels from DPOs in data products.
product.channelize.validValues=true | false
product.channelize=true

product.channelize.validate.fsw.description=Indicates whether to validate FSW version on the product before channelizing its DPOs.
product.channelize.validate.fsw.validValues=true | false
product.channelize.validate.fsw=true

product.channelize.validate.mpdu.description=If true, DPOs without a valid MPDU or FSW Version will not be channelized.
product.channelize.validate.mpdu.validValues=true | false
product.channelize.validate.mpdu=true

product.dpo.blockDescription=Properties that configure DPO handling.

product.dpo.process.description=Indicates whether the current mission requires product DPO (Data Product Object) processing.
product.dpo.process.validValues=true | false
product.dpo.process=false

product.dpo.validate.checksum.description=Indicates whether DPO checksums should be validated.
product.dpo.validate.checksum.validValues=true | false
product.dpo.validate.checksum=false

product.viewer.dir.description=The folder containing data product or DPO viewer scripts, as supplied by the mission. 
product.viewer.dir.behavioralNotes=Used only if the full path to a viewer is not already defined in the product dictionary.
product.viewer.dir.formatHint=Must be a valid unix directory path
product.viewer.dir=

product.dpsQueue.blockDescription=Properties that configure the internal product part queue and how it reports it's performance.

product.dpsQueue.limit.description=Product storage message queue length. Indicates how many product packets can be queued for writing until the telemetry input stream will be blocked.
product.dpsQueue.limit.validValues=1 to Integer.MAX_VALUE
product.dpsQueue.limit=100000

product.dpsQueue.msgOffer.timeoutMs.description=Product storage message queue timeout, in milliseconds.  How long the main telemetry thread will wait to queue product packets for storage before re-attempt.
product.dpsQueue.msgOffer.timeoutMs.validValues=1 to Long.MAX_VALUE
product.dpsQueue.msgOffer.timeoutMs=3000

product.dpsQueue.red.description=RED performance level for the product storage message queue, as percentage of the message queue length. 
product.dpsQueue.red.description.behavioralNotes=A value of 0 will disable the RED health state.
product.dpsQueue.red.validValues=[value of product.dpsQueue.yellow] + 1 to 100
product.dpsQueue.red=95

product.dpsQueue.yellow.description=YELLOW performance level for the product storage message queue, as percentage of the message queue length. 
product.dpsQueue.yellow.description.behavioralNotes=A value of 0 will disable the YELLOW health state.
product.dpsQueue.yellow.validValues=1 to 100
product.dpsQueue.yellow=80

product.process.blockDescription=Properties that configure general aspects of product PDU extraction and processing.

product.process.commandedHeader.use.description=Indicates whether to expect the commanded product secondary header in PDU packets if the streaming flag is false in the product dictionary
product.process.commandedHeader.use.validValues=true | false
product.process.commandedHeader.use=true

product.process.filename.dvt.marker.description=The character that indicates the start of the DVT (Data Validity Time) in the product filename.
product.process.filename.dvt.marker=_

product.process.filename.dvt.separator.description=The character that separates the DVT (Data Validity Time) coarse and fine time segments in the product filename.
product.process.filename.dvt.separator=-

product.process.partOffset.max.description=Limit on the acceptable product part offset value (because if it's too big, causes astronomical product file).
product.process.partOffset.max.behavioralNotes=If product part offset is greater than this value, the part data will not be written and the part will be logged as invalid.
product.process.partOffset.max.validValues=1 to 4294967296
product.process.partOffset.max=4194303

product.process.transactionNum.upperBits.description=Indicates whether to use the upper 63 bits of transaction sequence number that is 8 bytes long. If false, uses the lower 63 bits.
product.process.transactionNum.upperBits.validValues=true | false
product.process.transactionNum.upperBits=false

product.storage.blockDescription=Properties that configure aspects of how data product files are stored.

product.storage.cache.archive.description=Enables or disables the archive of the product cache/temporary directories.
product.storage.cache.archive.behavioralNotes=Usually, the product cache and temporary files created by the product builder while a product is \
under construction are removed once the product is complete. Enabling this means they are just renamed, but not deleted.
product.storage.cache.archive.validValues=true | false
product.storage.cache.archive=false

product.storage.cache.limit.description=Indicates size of file object cache in the product builder. This is how many in-progress product files the product builder will keep open at once.
product.storage.cache.limit.behavioralNotes=The product builder performs better if in-progress files can be left open, but leaving open an indefinite number uses up file descriptors, which may be limited by the OS.
product.storage.cache.limit.validValues=1 to 100
product.storage.cache.limit=5

product.storage.directory.ops.description=Directory to be used for storing data products in OPS venue.
product.storage.directory.ops.behavioralNotes=In operations, data products are written here rather than under the session output directory.
product.storage.directory.ops.formatHint=Must be a valid unix directory name.
product.storage.directory.ops=/data/msop/mpcs_rw

product.storage.directory.override.description=Optional override directory for product storage. Overrides the session or OPS product storage directory.
product.storage.directory.override.formatHint=Must be a valid unix directory path.
product.storage.directory.override=

product.storage.directory.sub.description=Name of the subdirectory under the session or OPS product storage directory where data products should be written.
product.storage.directory.sub=products

product.storage.directory.withApid.description=Indicates whether product subdirectory names are constructed from numeric APID (true) or string product type (false).
product.storage.directory.withApid.validValues=true | false
product.storage.directory.withApid=true

product.storage.partial.onShutdown.description=Enables/disables whether partials are forced out when the product builder is shutdown.
product.storage.partial.onShutdown.validValues=true | false
product.storage.partial.onShutdown=true

product.storage.product.lock.retry.count.description=Maximum number of retries to get the product file lock.
product.storage.product.lock.retry.count.behavioralNotes=Product file locks are used to prevent multiple downlink processors from updating the same data product at the same time.
product.storage.product.lock.retry.count.validValues=1 to Integer.MAX_VALUE
product.storage.product.lock.retry.count=5

product.storage.product.lock.retry.interval.description=Indicates the interval between attempts to obtain a product file lock, in milliseconds.
product.storage.product.lock.retry.interval.validValues=1 to Long.MAX_VALUE
product.storage.product.lock.retry.interval=500

product.vcids.allowed.description=Comma-separated list of supported virtual channel IDs for product builder. Only product packets with these VCIDs will be processed into data products.
product.vcids.allowed.validValues=0 to 63
product.vcids.allowed=0
