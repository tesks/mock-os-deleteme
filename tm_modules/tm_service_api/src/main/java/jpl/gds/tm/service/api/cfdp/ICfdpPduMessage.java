/*
 * Copyright 2006-2018. California Institute of Technology.
 * ALL RIGHTS RESERVED.
 * U.S. Government sponsorship acknowledged.
 *
 * This software is subject to U. S. export control laws and
 * regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
 * extent that the software is subject to U.S. export control laws
 * and regulations, the recipient has the responsibility to obtain
 * export licenses or other export authority as may be required
 * before exporting such information to foreign countries or
 * providing access to foreign nationals.
 */
package jpl.gds.tm.service.api.cfdp;

import jpl.gds.ccsds.api.cfdp.ICfdpPdu;
import jpl.gds.shared.message.IMessage;
import jpl.gds.shared.time.IAccurateDateTime;
import jpl.gds.shared.time.ILocalSolarTime;
import jpl.gds.shared.time.ISclk;

/**
 * An interface to be implemented by CFDP-related messages that carry a PDU.
 *
 * MPCS-9950 - 07/16/18 - Added new required fields
 *
 * @since R8
 */
public interface ICfdpPduMessage extends IMessage {

    /**
     * Get the PDU this message contains.
     *
     * @return the ICfdpPdu this message carries
     */
    ICfdpPdu getPdu();

    /**
     * Get the session ID
     * @return Session ID
     */
    long getSessionId();

    /**
     * Get the host ID
     * @return Host ID
     */
    long getHostId();

    /**
     * Get the fragment
     * @return Fragment
     */
    long getFragment();

    /**
     * Get Session Name
     * @return Session name
     */
    String getSessionName();

    /**
     * Get Host
     * @return Host name
     */
    String getHost();

    /**
     * Get User
     * @return User name
     */
    public String getUser();

    /**
     * Get flight dictionary directory
     * @return FSW directory
     */
    String getFswDictionaryDir();

    /**
     * Get light dictionary version
     * @return FSW version
     */
    String getFswVersion();

    /**
     * Get venue type
     * @return Venue type
     */
    String getVenueType();

    /**
     * Get testbed name
     * @return Testbed name
     */
    String getTestbedName();

    /**
     * Get output directory
     * @return Output directory
     */
    String getOutputDir();

    /**
     * Get Spacecraft ID
     * @return Spacecraft IDs
     */
    int getScid();

    /**
     * Get application process ID
     * @return Application process ID
     */
    int getApid();

    /**
     * Get APID Name (product type)
     * @return APID Name
     */
    String getApidName();

    /**
     * Get Virtual channel ID
     * @return VC ID
     */
    int getVcid();

    /**
     * The relay spacecraft ID
     * @return relay spacecraft ID
     */
    int getRelayScid();

    /**
     * Get the sequence count
     * @return Sequence count
     */
    int getSequenceCount();

    /**
     * Gets the spacecraft clock (SCLK)
     * @return SCLK, or null if no packet SCLK defined
     */
    ISclk getSclk();

    /**
     * Gets the local solar time (LST)
     * @return LST, or null if no SCLK defined or the current
     *            configuration does not support LST calculation.
     */
    ILocalSolarTime getLst();

    /**
     * Gets the spacecraft event time (SCET)
     *
     * @return SCET, or null if no SCET defined
     */
    IAccurateDateTime getScet();

    /**
     * Gets the earth receive time (ERT)
     * @return ERT
     */
    IAccurateDateTime getErt();

    /**
     * Check if message object was generated by a simulator.
     * @return true if a simulator generated this message, false otherwise
     */
    boolean fromSimulator();

    /**
     * Set the flag to indicate whether this message is generated from a simulator or not.
     */
    void setFromSimulator(boolean fromSimulator);

    /**
     * Set the PDU for this message.
     *
     */
    void setPdu(ICfdpPdu pdu);

}