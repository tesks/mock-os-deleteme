/*
 * Copyright 2006-2018. California Institute of Technology.
 * ALL RIGHTS RESERVED.
 * U.S. Government sponsorship acknowledged.
 *
 * This software is subject to U. S. export control laws and
 * regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
 * extent that the software is subject to U.S. export control laws
 * and regulations, the recipient has the responsibility to obtain
 * export licenses or other export authority as may be required
 * before exporting such information to foreign countries or
 * providing access to foreign nationals.
 */
package jpl.gds.monitor.guiapp.common.gui;

import jpl.gds.shared.message.IMessage;

/**
 * This interface is to be implemented by classes that are direct subscribers to
 * some message distributor and which use a BoundedGlazedEventList to store a
 * history of messages/items received. These classes act as a layer over the
 * actual bounded event list that knows what types of item are on the list, how
 * long the history list is for that type of item, etc.
 *
 */
public interface IGlazedListHistorySubscriber<T extends INatListItem> {

    /**
     * Adds new messages to the event history list.
     * 
     * @param msgs array of IMessages to add
     */
    public void messageReceived(IMessage[] msgs);
    
    /**
     * Adds a listener to this subscriber. This is not a subscriber to the event
     * history list itself, but rather to control events generated by this
     * subscriber.
     * 
     * @param listener
     *            the listener to add
     */
    public void addListener(IGlazedListHistorySubscriberListener listener);

    /**
     * Removes a listener. This is not a subscriber to the event history
     * list itself, but rather to control events generated by this subscriber.
     * 
     * @param listener
     *            the listener to remove
     */
    public void removeListener(IGlazedListHistorySubscriberListener listener);

    /**
     * Add a new bounded event list that will receive incoming events.
     * 
     * @param list
     */
    public void addBoundedEventList(BoundedGlazedEventList<T> list);

    /**
     * Remove a previously added event list, such that it no longer receives
     * incoming events
     * 
     * @param list
     */
    public void removeBoundedEventList(BoundedGlazedEventList<T> list);

}