#
# AMMOS Mission Data Processing and Control System (AMPCS)
# Initial Author: M. Indictor
# Creation Date: 10/03/2017
#
# Copyright (c) 2006-2017. California Institute of Technology.
# ALL RIGHTS RESERVED.
# U.S. Government sponsorship acknowledged.
#
# This software is subject to U. S. export control laws and
# regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
# extent that the software is subject to U.S. export control laws
# and regulations, the recipient has the responsibility to obtain
# export licenses or other export authority as may be required
# before exporting such information to foreign countries or
# providing access to foreign nationals.
#
# This is the AMPCS properties file containing properties for the
# chill_telem_ingest application.
#
# This file is loaded using the standard AMPCS configuration file search
# mechanism, which typically looks first at the AMPCS system configuration
# level, then at the project/mission configuration level, then at the user
# configuration level. All properties files that are found will be loaded
# in this order, with any configuration properties specified in later files
# overriding those found in earlier files. It is not necessary to override
# all properties at the project or user level. If properties are omitted
# at any level, the property values loaded at the previous level remain in
# effect.
#
# Properties and their corresponding values must be included on a
# single line.
#
# Change Notes:
# 3/13/18 - Add actuator configuration
# 08/15/19 - Update TI/TP to point at deployed webGui location
#
#######################################################
# Needed to change the contextPath from "/ingest" -> "/" so we can serve the
# MC GUI code from TI Server URL: http://<host>:<port>/ampcs
server.servlet.contextPath=/
# server.port=8080
spring.jackson.serialization.indent_output=true

#  Defining server.address as blank will bind the server to localhost
# The server address should be overridden at the project or user level. 
# server.address=

# Spring boot actuator. See http://docs.spring.io/spring-boot/docs/current-SNAPSHOT/reference/htmlsingle/#production-ready
endpoints.actuator.enabled=true 
endpoints.shutdown.enabled=false

management.context-path=/mgmt
management.security.enabled=false 
management.add-application-context-header=false

# Property to set the asynchronous timeout for a request.
# This is in milliseconds and is going to be high.
spring.mvc.async.request-timeout = 3600000