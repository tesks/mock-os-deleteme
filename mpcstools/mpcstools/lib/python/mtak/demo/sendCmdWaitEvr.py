#! /usr/bin/env python
# -*- coding: utf-8 -*-

"""
Sample script to send an FSW command and then wait for
the corresponding EVR to show up.
"""

from __future__ import (absolute_import, division, print_function)

#Import the wrapper functions
from mtak.wrapper import *

def test():
    #Startup the MTAK connection to FSW/SSE
    #startup(key='74')
    startup(key='80',host='mslgdsitd1',dbHost='drill',jmsHost='mslgdsit')

    #Send the FSW command and check the result
    console('Sending command CMD_NO_OP')
    result = send_fsw_cmd(command='CMD_NO_OP')
    if not result:
        console('My command failed to send!')

    #Use a wait condition to wait for the EVR to arrive
    console('Waiting for EVR to arrive...')
    evr = wait_evr(name='CMD_EVR_NO_OP',timeout='10',lookback='5')

    #If the EVR showed up, print out some details
    if evr:
        log('The EVR showed up!')
        console('EVR named {evr.name} showed up. It was generated at SCLK {evr.sclk}'.format(evr.name,evr.sclk))

    #We couldn't find the EVR we wanted
    else:
        console('Could not find the requested EVR...')

    #Pause the script for 10 seconds
    wait(seconds="10")

    #Get all the EVRs that were generated by the "cmd" module
    console('Listing "cmd" module EVRs:')
    [console('Got EVR {evr.name} with a level of {evr.level} at SCLK {evr.sclk}'.format(evr=_evr)) for _evr in get_evr(module="cmd")]

    shutdown()

def main():
    return test()

if __name__ == "__main__":
    main()

################################################################################
# vim:set sr et ts=4 sw=4 ft=python fenc=utf-8: // See Vim, :help 'modeline'
