#
# AMMOS Mission Data Processing and Control System (AMPCS)
# Initial Author: D. Eckels
# Creation Date: 05/23/17
#
# Copyright (c) 2006-2017. California Institute of Technology.
# ALL RIGHTS RESERVED.
# U.S. Government sponsorship acknowledged.
#
# This software is subject to U. S. export control laws and
# regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
# extent that the software is subject to U.S. export control laws
# and regulations, the recipient has the responsibility to obtain
# export licenses or other export authority as may be required
# before exporting such information to foreign countries or
# providing access to foreign nationals.
# 
# This is the AMPCS properties file containing properties for uplink Command
# Link Transmission Unit (CLTU) handling.
#
# This file is loaded using the standard AMPCS configuration file search
# mechanism, which typically looks first at the AMPCS system configuration 
# level, then at the project/mission configuration level, then at the user 
# configuration level. All properties files that are found will be loaded 
# in this order, with any configuration properties specified in later files 
# overriding those found in earlier files. It is not necessary to override
# all properties at the project or user level. If properties are omitted
# at any level, the property values loaded at the previous level remain in
# effect.
#
# Properties and their corresponding values must be included on a single line.
#
# Change Notes:
# MPCS-8943 - Reviewed and documented for R8 (7/12/17)
########################################################

cltu.categoryDescription=CLTU properties configure the construction of Command Link Transmission Units (CLTUs) \
when wrapping command data for transport.

cltu.codeblock.blockDescription=Properties that apply to construction of BCH codeblocks in CLTUs.
 
cltu.codeblock.data.length.description=BCH Codeblock data bit length
cltu.codeblock.data.length.validValues=8 | 16 | 32 | 64
cltu.codeblock.data.length.behavioralNotes=Must be divisible by 8
cltu.codeblock.data.length=56

cltu.codeblock.edac.length.description=BCH Codeblock EDAC bit length
cltu.codeblock.edac.length.validValues=1 to [value of cltu.codeblock.total.length - value of cltu.codeblock.data.length]
cltu.codeblock.edac.length.behavioralNotes=edac.length + fill.length must be divisible by 8
cltu.codeblock.edac.length=7

cltu.codeblock.fill.length.description=BCH Codeblock fill bit length
cltu.codeblock.fill.length.validValues=1 to [value of cltu.codeblock.total.length - value of cltu.codeblock.data.length]
cltu.codeblock.fill.length.behavioralNotes=edac.length + fill.length must be divisible by 8
cltu.codeblock.fill.length=1

cltu.fill.hex.description=CLTU fill byte value (in hex format, without leading 'x')
cltu.fill.hex.validValues=0 to FF
cltu.fill.hex=55

cltu.framesPer.description=Number of frames to use per CLTU
cltu.framesPer.validValues=1 to 16
cltu.framesPer=1

cltu.length.max.description=Maximum CLTU byte length.
cltu.length.max.validValues=1 to Integer.MAX_VALUE
cltu.length.max=1188

cltu.sequence.blockDescription=Properties that control various byte sequences used when forming CLTUs.

cltu.sequence.start.hex.long.description=Long CLTU start sequence data value  (in hex format, without leading 'x')
cltu.sequence.start.hex.long.behavioralNotes=Character length of value must be divisible by 2
cltu.sequence.start.hex.long=5555EB90

cltu.sequence.start.hex.short.description=Short CLTU start sequence data value  (in hex format, without leading 'x')
cltu.sequence.start.hex.short.behavioralNotes=Character length of value must be divisible by 2
cltu.sequence.start.hex.short=EB90

cltu.sequence.start.useLong.description=Indicates whether to use the long start sequence instead of the short start sequence for CLTUs
cltu.sequence.start.useLong.validValues=true | false
cltu.sequence.start.useLong=true

cltu.sequence.tail.hex.description=CLTU tail sequence data value  (in hex format, without leading 'x')
cltu.sequence.tail.hex.behavioralNotes=Character length of value must be divisible by 2
cltu.sequence.tail.hex=C5C5C5C5C5C5C579
