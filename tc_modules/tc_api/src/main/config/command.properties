#
# AMMOS Mission Data Processing and Control System (AMPCS)
# Initial Author: D. Eckels
# Creation Date: 05/23/17
#
# Copyright (c) 2006-2017. California Institute of Technology.
# ALL RIGHTS RESERVED.
# U.S. Government sponsorship acknowledged.
#
# This software is subject to U. S. export control laws and
# regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
# extent that the software is subject to U.S. export control laws
# and regulations, the recipient has the responsibility to obtain
# export licenses or other export authority as may be required
# before exporting such information to foreign countries or
# providing access to foreign nationals.
# 
# This is the AMPCS properties file containing properties for miscellaneous
# commanding capabilities.
#
# This file is loaded using the standard AMPCS configuration file search
# mechanism, which typically looks first at the AMPCS system configuration 
# level, then at the project/mission configuration level, then at the user 
# configuration level. All properties files that are found will be loaded 
# in this order, with any configuration properties specified in later files 
# overriding those found in earlier files. It is not necessary to override
# all properties at the project or user level. If properties are omitted
# at any level, the property values loaded at the previous level remain in
# effect.
#
# Properties and their corresponding values must be included on a single line.
#
# Change Notes:
# MPCS-8943 - Reviewed and documented for R8 (7/12/17)
# MPCS-10834 - Added property for path to AMMOS MPSA CTS cxml command dictionary compiler (05/03/19)
########################################################
command.categoryDescription=Properties utilized for miscellaneous commanding capabilities. These include the format of \
the commands entered by users, packaging types allowed by venue, and displayed elements of the chill_up GUI

command.arguments.blockDescription=Properties that influence the entry of arguments in command mnemonic strings.

command.arguments.default.description=Display string for defaulted command arguments
command.arguments.default=[default]

command.arguments.enumerated.bitValue.format.description=The format of bit values for enumerations in the command dictionary and as can be entered by users for command arguments. 
command.arguments.enumerated.bitValue.format.validValues=DECIMAL | BINARY | HEX
command.arguments.enumerated.bitValue.format=UNSPECIFIED

command.arguments.enumerated.bitValue.use.description=Indicates whether users can enter enumerated command arguments using the "bit" value in the command dictionary.
command.arguments.enumerated.bitValue.use.validValues=true | false
command.arguments.enumerated.bitValue.use=true

command.arguments.enumerated.dictionaryValue.use.description=Indicates whether users can enter enumerated command arguments using the "dictionary" value in the command dictionary.
command.arguments.enumerated.dictionaryValue.use.validValues=true | false
command.arguments.enumerated.dictionaryValue.use=true

command.arguments.enumerated.fswValue.use.description=Indicates whether users can enter enumerated command arguments using the "FSW" value in the command dictionary.
command.arguments.enumerated.fswValue.use.validValues=true | false
command.arguments.enumerated.fswValue.use=true

command.arguments.enumerated.outputValue.format.description=Format of output value for enumerated command arguments.
command.arguments.enumerated.outputValue.format.validValues=DECIMAL | STRING
command.arguments.enumerated.outputValue.format=STRING

command.dictionary.blockDescription=Properties that influence how the command dictionary is used.

command.dictionary.commandModule.use.description=Indicates whether the command dictionary supports, and command interfaces should use, module names associated with command definitions.
command.dictionary.commandModule.use.validValues=true | false
command.dictionary.commandModule.use=true

command.dictionary.validate.description=Indicates if commands are validated against the command dictionary.
command.dictionary.validate.validValues=true | false
command.dictionary.validate=true

command.dictionary.cts.compiler.path.description=Location to the MPSA CTS library's command dictionary compiler.
command.dictionary.cts.compiler.path.behavioralNotes=The cxml binary is required for command dictionary compilation using the MPSA CTS Gold Standard Translation, Encoding, and Wrapping (TEW).
command.dictionary.cts.compiler.path=/ammos/cts/bin/cxml

command.dictionary.cts.validate.schema.description=Indicates whether the MPSA CTS library will perform schema validation on command dictionary. If enabled, non-validating command dictionaries will cause errors.
command.dictionary.cts.validate.schema.behavioralNotes=The MPSA CTS library can be compiled with or without a noschema option. If this property is false, noschema will be supplied.
command.dictionary.cts.validate.schema=true

command.external.blockDescription=Property block for the configuration of external applications allowed to interface with chill_up.

command.external.applications.description=Comma-separated list of supported external applications uplink can interface (exchange SCMFs) with.
command.external.applications.validValues=rose | mslice
command.external.applications=rose,mslice

command.external.mslice.enable.description=Enables/disables one-button interface to MSLICE in chill_up.
command.external.mslice.enable.validValues=true | false
command.external.mslice.enable=false

command.external.mslice.waitForExit.description=Enables/disables waiting for MSLICE exit after launch.
command.external.mslice.waitForExit.validValues=true | false
command.external.mslice.waitForExit=false

command.external.rose.enable.description=Enables/disables one-button interface to RoSE in chill_up.
command.external.rose.enable.validValues=true | false
command.external.rose.enable=false

command.external.rose.waitForExit.description=Enables/disables waiting for RoSE exit after launch
command.external.rose.waitForExit.validValues=false
command.external.rose.waitForExit=false

command.FileLoad.blockDescription=These properties are for configuring file types for uplink and how they are chunked during transmission.

command.FileLoad.chunkSize.description=Maximum size of a file chunk in bytes.
command.FileLoad.chunkSize.behavioralNotes=If a file is less than this, it is not chunked. Larger files will be chunked into one or more chunks this size and one chunk of the remaining data length.
command.FileLoad.chunkSize=260220

command.FileLoad.types.description=Comma-separated list of supported files types for uplink.
command.FileLoad.types.behavioralNotes=Values are mission-defined and each must map to a command.FileLoad.values.[UPLINK_FILE_TYPE] configuration entry.
command.FileLoad.types=GENERIC,SEQUENCE

command.FileLoad.values.[UPLINK_FILE_TYPE].description=The file type number corresponding to the specified uplink file type, as defined by command.FileLoad.types.
command.FileLoad.values.[UPLINK_FILE_TYPE].validValues=0 to 127
command.FileLoad.values.GENERIC=0
command.FileLoad.values.SEQUENCE=1

command.gui.blockDescription=Property block for configuring which tabs are displayed/used in the chill_up GUI per venue, \
and how request information is displayed.

command.gui.radiationListOrder.description=Determines the order of the radiation list table widget in the chill_up GUI. 
command.gui.radiationListOrder.validValues=TOP_DOWN | BOTTOM_UP
command.gui.radiationListOrder.behavioralNotes=This does not determine the actual order of execution, it just determines how the radiation list is displayed.
command.gui.radiationListOrder=TOP_DOWN

command.gui.show.behavioralNotes=If true, output goes to chill_up GUI, if false to the console
command.gui.show.description=If the command uplink should include a GUI component
command.gui.show.validValues=true | false
command.gui.show=false

command.gui.showStringIdSelector.description=Indicates if the command string ID selector should be shown in the GUI.
command.gui.showStringIdSelector.validValues=true | false
command.gui.showStringIdSelector=false

command.gui.tabs.[VENUE].COMMAND_BUILDER.description=Indicates whether the command builder GUI tab is shown in the specified venue.
command.gui.tabs.[VENUE].COMMAND_BUILDER.validValues=true | false
command.gui.tabs.[VENUE].COMMAND_BUILDER.behavioralNotes=Defaults to false if no entry for a venue.
command.gui.tabs.ATLO.COMMAND_BUILDER=true
command.gui.tabs.TESTBED.COMMAND_BUILDER=true
command.gui.tabs.TESTSET.COMMAND_BUILDER=true

command.gui.tabs.[VENUE].FAULT_INJECTION.description=Indicates whether the fault injection GUI tab is shown in the specified venue.
command.gui.tabs.[VENUE].FAULT_INJECTION.validValues=true | false
command.gui.tabs.[VENUE].FAULT_INJECTION.behavioralNotes=Defaults to false if no entry for a venue.
command.gui.tabs.TESTBED.FAULT_INJECTION=true
command.gui.tabs.TESTSET.FAULT_INJECTION=true

command.gui.tabs.[VENUE].IMMEDIATE_COMMAND.description=Indicates whether the immediate command GUI tab is shown for the specified venue.
command.gui.tabs.[VENUE].IMMEDIATE_COMMAND.validValues=true | false
command.gui.tabs.[VENUE].IMMEDIATE_COMMAND.behavioralNotes=Defaults to false if no entry for a venue.
command.gui.tabs.TESTBED.IMMEDIATE_COMMAND=true
command.gui.tabs.TESTSET.IMMEDIATE_COMMAND=true

command.gui.tabs.[VENUE].SEND_FILE_LOAD.description=Indicates whether the file load GUI tab is shown is shown in the specified venue.
command.gui.tabs.[VENUE].SEND_FILE_LOAD.validValues=true | false
command.gui.tabs.[VENUE].SEND_FILE_LOAD.behavioralNotes=Defaults to false if no entry for a venue.
command.gui.tabs.ATLO.SEND_FILE_LOAD=true
command.gui.tabs.CRUISE.SEND_FILE_LOAD=true
command.gui.tabs.OPS.SEND_FILE_LOAD=true
command.gui.tabs.ORBIT.SEND_FILE_LOAD=true
command.gui.tabs.SURFACE.SEND_FILE_LOAD=true
command.gui.tabs.TESTBED.SEND_FILE_LOAD=true
command.gui.tabs.TESTSET.SEND_FILE_LOAD=true

command.gui.tabs.ATLO.SEND_FILE_CFDP=false
command.gui.tabs.CRUISE.SEND_FILE_CFDP=false
command.gui.tabs.OPS.SEND_FILE_CFDP=false
command.gui.tabs.ORBIT.SEND_FILE_CFDP=false
command.gui.tabs.SURFACE.SEND_FILE_CFDP=false
command.gui.tabs.TESTBED.SEND_FILE_CFDP=false
command.gui.tabs.TESTSET.SEND_FILE_CFDP=false

command.gui.tabs.[VENUE].SEND_RAW_DATA_FILE.description=Indicates whether the send raw data file GUI tab is shown in the specified venue.
command.gui.tabs.[VENUE].SEND_RAW_DATA_FILE.validValues=true | false
command.gui.tabs.[VENUE].SEND_RAW_DATA_FILE.behavioralNotes=Defaults to false if no entry for a venue.
command.gui.tabs.ATLO.SEND_RAW_DATA_FILE=true
command.gui.tabs.CRUISE.SEND_RAW_DATA_FILE=true
command.gui.tabs.OPS.SEND_RAW_DATA_FILE=true
command.gui.tabs.ORBIT.SEND_RAW_DATA_FILE=true
command.gui.tabs.SURFACE.SEND_RAW_DATA_FILE=true
command.gui.tabs.TESTBED.SEND_RAW_DATA_FILE=true
command.gui.tabs.TESTSET.SEND_RAW_DATA_FILE=true

command.gui.tabs.[VENUE].SEND_SCMF.description=Indicates whether the send SCMF GUI tab is shown in the specified venue.
command.gui.tabs.[VENUE].SEND_SCMF.validValues=true | false
command.gui.tabs.[VENUE].SEND_SCMF.behavioralNotes=Defaults to false if no entry for a venue.
command.gui.tabs.ATLO.SEND_SCMF=true
command.gui.tabs.CRUISE.SEND_SCMF=true
command.gui.tabs.OPS.SEND_SCMF=true
command.gui.tabs.ORBIT.SEND_SCMF=true
command.gui.tabs.SURFACE.SEND_SCMF=true
command.gui.tabs.TESTBED.SEND_SCMF=true
command.gui.tabs.TESTSET.SEND_SCMF=true

command.messaging.sendOnSocketFailure.description=Indicates whether command messages should be sent onto the message service even when the transmission of the command data fails.
command.messaging.sendOnSocketFailure.validValues=true | false
command.messaging.sendOnSocketFailure=true

command.SSE.prefix.description=Prefix to be typed by the user before SSE/GSE commands when sent via uplink tools.
command.SSE.prefix.behavioralNotes=Prefix will be stripped before commands are sent to the SSE/GSE.
command.SSE.prefix=sse:

command.echo.blockDescription=Properties associated with the command echo standalone application
command.echo.socket.retry.intervalMS.description=When an attempt to establish a socket connection fails, the wait time in milliseconds before the next attempt is performed
command.echo.socket.retry.intervalMS.validValues=1 to Long.MAX_VALUE
command.echo.socket.retry.intervalMS=1000
command.echo.socket.retry.retries.description=The number of attempts to establish a socket connection
command.echo.socket.retry.retries.validValues=1 to Long.MAX_VALUE
command.echo.socket.retry.retries=-1
command.echo.defaultHost.description=Default host for command echo. Used by client socket and DSN Emulator input protocols
command.echo.defaultHost=localhost
command.echo.defaultPort.description=Default port for command ehco Used by client socket and server socket input protocols
command.echo.defaultPort.validValues=0 to 65535
command.echo.defaultPort=54321

####################### Internal Properties - Not for Customer modification ###########################
command.internal.blockDescription=Internal properties for general command configuration.

command.internal.external.mslice.class.description=Fully-qualified name of adapter class for the MSLICE application
command.internal.external.mslice.class=jpl.gds.tcapp.app.gui.external.MsliceApplication

command.internal.external.mslice.script.description=Script to launch MSLICE. Relative path to $CHILL_GDS.
command.internal.external.mslice.script=bin/internal/launch_mslice

command.internal.external.rose.class.description=Fully-qualified name of adapter class for the RoSE application
command.internal.external.rose.class=jpl.gds.tcapp.app.gui.external.RoseApplication

command.internal.external.rose.script.description=Script to launch RoSE. Relative path to $CHILL_GDS.
command.internal.external.rose.script=bin/internal/launch_rose

command.internal.output.adapter.FILE.description=Fully-qualified class name for the command output adapter used when the binary file output flag is utilized,
command.internal.output.adapter.FILE=jpl.gds.tc.impl.output.adapter.FileOutputAdapter

command.internal.output.adapter.[UPLINK_CONNECTION_TYPE].description=Fully-qualified class name for the command output adapter for the specified uplink connection type.
command.internal.output.adapter.COMMAND_SERVICE=jpl.gds.tc.impl.output.adapter.CpdOutputAdapter
command.internal.output.adapter.SOCKET=jpl.gds.tc.impl.output.adapter.SocketOutputAdapter

