#
# AMMOS Mission Data Processing and Control System (AMPCS)
# Initial Author: M. Verdugo
# Creation Date: 09/15/2016
#
# Copyright (c) 2006-2017. California Institute of Technology.
# ALL RIGHTS RESERVED.
# U.S. Government sponsorship acknowledged.
#
# This software is subject to U. S. export control laws and
# regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
# extent that the software is subject to U.S. export control laws
# and regulations, the recipient has the responsibility to obtain
# export licenses or other export authority as may be required
# before exporting such information to foreign countries or
# providing access to foreign nationals.
# 
# This is the AMPCS properties file containing properties for Integrated
# command related tasks
#
# This file is loaded using the standard AMPCS configuration file search
# mechanism, which typically looks first at the AMPCS system configuration 
# level, then at the project/mission configuration level, then at the user 
# configuration level. All properties files that are found will be loaded 
# in this order, with any configuration properties specified in later files 
# overriding those found in earlier files. It is not necessary to override
# all properties at the project or user level. If properties are omitted
# at any level, the property values loaded at the previous level remain in
# effect.
#
# Properties and their corresponding values must be included on a single line.
#
# Change Notes:
#

########################################################

icmd.categoryDescription=ICMD properties are used to configuration the integrated command solution, in which AMPCS uses the DSN \
command service for uplink.

icmd.pollers.blockDescription=Configuration properties that control how AMPCS polls the DSN CPD server.

icmd.pollers.failedPollsBeforeStale.description=Number of polls to the command service that can fail before subscribers are notified that their command data is stale.
icmd.pollers.failedPollsBeforeStale.validValues = 1 to Integer.MAX_VALUE
icmd.pollers.failedPollsBeforeStale = 3

icmd.pollers.radiationCheckInterval.description=Time interval in milliseconds between checks to see if a command request was radiated (internal poll, not command service poll).
icmd.pollers.radiationCheckInterval.validValues = 1000 to Integer.MAX_VALUE
icmd.pollers.radiationCheckInterval = 1000

icmd.pollers.dmsPollInterval.description= Polling interval (ms) configuration for CPD DMS broadcast status messages
icmd.pollers.dmsPollInterval.validValues = 1000 to Integer.MAX_VALUE
icmd.pollers.dmsPollInterval = 1000

icmd.publisher.blockDescription=Configuration properties for chill_status_publisher, which monitors ongoing requests in the CPD server \
and publishes AMPCS updates.

icmd.publisher.ageout.description=Time interval in seconds after which a finalized command request will be removed the internal command request tables in chill_status_publisher. 
icmd.publisher.ageout.validValues=0 to Long.MAX_VALUE
icmd.publisher.ageout.behavioralNotes=A value of 0 disables finalized request ageout, which may cause chill_status_publisher to consume memory over time.
icmd.publisher.ageout = 1200

icmd.publisher.epoch.description=Number of seconds back in time that chill_status_publisher will look when querying the database for command request status.
icmd.publisher.epoch.validValues=0 to Long.MAX_VALUE
icmd.publisher.epoch.behavioralNotes=A value of 0 disables epoch, i.e., the chill_status_publisher will begin querying command status from the current time.
icmd.publisher.epoch = 604800

icmd.publisher.extremeAgeout.description=Time interval in seconds after which a 'stuck' command request will be removed the internal command request tables in chill_status_publisher, whether it has been finalized or not.
icmd.publisher.extremeAgeout.validValues=[value of icmd.publisher.ageout] to Long.MAX_VALUE
icmd.publisher.extremeAgeout.behavioralNotes=A value of 0 disables extreme request ageout, which may cause chill_status_publisher to consume memory over time.
icmd.publisher.extremeAgeout = 43200

icmd.publisher.jmsPublisherAgeout.description=Amount of time in milliseconds a JMS publisher will be kept open in chill_status_publisher if no command updates have been received for the session it applies to. 
icmd.publisher.jmsPublisherAgeout.validValues=1000 to Long.MAX_VALUE
icmd.publisher.jmsPublisherAgeout = 60000

icmd.rest.blockDescription=Configuration properties related to how AMPCS uses the REST interface to the CPD server.

icmd.rest.bufferCpdResponse.description=Indicates whether to buffer responses to command service long poll.
icmd.rest.bufferCpdResponse.validValues=true | false
icmd.rest.bufferCpdResponse = true

icmd.rest.connectTimeout.description=The number of milliseconds before a connection attempt to the command REST server is timed out.
icmd.rest.connectTimeout=1 to Integer.MAX_VALUE
icmd.rest.connectTimeout = 10000

icmd.rest.cpdReponseBufferSize.description=Size in bytes of the command service long poll response buffer. When the response exceeds this size, it is logged to a temporary file and discarded.
icmd.rest.cpdReponseBufferSize.behavioralNotes=Influences the memory required by uplink clients.
icmd.rest.cpdReponseBufferSize=1024 to 30000000
icmd.rest.cpdReponseBufferSize = 10000000

icmd.rest.domain.description=Network domain of the command service (CPD) host.
icmd.rest.domain.formatHint=Must be a valid network domain name.
icmd.rest.domain = jpl.nasa.gov

icmd.rest.longPollTimeout.description=Timeout in milliseconds for long poll requests to the command service.
icmd.rest.longPollTimeout.validValues=1 to Integer.MAX_VALUE
icmd.rest.longPollTimeout = 60000

icmd.rest.protocol.description=Network protocol for communicating with the command service.
icmd.rest.protocol = https

icmd.rest.regularCallTimeout.description=Timeout in milliseconds for other (non-long-poll) requests to the command service.
icmd.rest.regularCallTimeout.validValues=1 to Integer.MAX_VALUE
icmd.rest.regularCallTimeout = 10000

icmd.jaxb.blockDescription=Configuration properties that affect AMPCS parsing of the CPD REST content and what it expects to \
see in XML messages from CPD.
icmd.jaxb.packageName.description=The JAXB java package name where all the Java classes representing the compiled XML ICMD schemas reside.
icmd.jaxb.packageName = gov.nasa.jpl.icmd.schema

icmd.jaxb.rootMessage.schemaName.description=Base file name, no path, for the ICMD XML schema file. Will be located relative to the $CHILL_GDS/schema directory.
icmd.jaxb.rootMessage.schemaName = CMDMessage.xsd

icmd.jaxb.rootMessage.schemaVersion.description=Version of the ICMD schema in use.
icmd.jaxb.rootMessage.schemaVersion = 1.0

icmd.jaxb.rootMessage.type.description=The root message type for outgoing ICMD request messages.
icmd.jaxb.rootMessage.type = CMDMessage

icmd.jaxb.schema.commandServiceNamespace.description=The XML namespace for ICMD XML requests.
icmd.jaxb.schema.commandServiceNamespace = http://dsms.jpl.nasa.gov/cmd/schema

icmd.jaxb.schema.commandServiceNamespacePrefix.description=The XML namespace prefix for ICMD XML requests.
icmd.jaxb.schema.commandServiceNamespacePrefix =

icmd.jaxb.schema.prefixMapperProperty.description=The fully-qualified JAXB namespace prefix mapper class.
icmd.jaxb.schema.prefixMapperProperty = com.sun.xml.bind.namespacePrefixMapper

icmd.jaxb.xmlEncoding.description=The XML encoding to use for ICMD XML requests.
icmd.jaxb.xmlEncoding = UTF-8

icmd.rest.parameters.[ICMD_PARAM_NAME].description=URI parameter place holder property for the specified ICMD parameter.
icmd.rest.parameters.[ICMD_PARAM_NAME].formatHint=Value must be enclosed in curly brackets ({})
icmd.rest.parameters.AGGREGATION_METHOD = {AGG_METHOD}
icmd.rest.parameters.BITRATE = {BITRATE}
icmd.rest.parameters.DSS_ID = {DSS_ID}
icmd.rest.parameters.EXEC_METHOD = {EXEC_METHOD}
icmd.rest.parameters.EXEC_MODE = {EXEC_MODE}
icmd.rest.parameters.EXEC_STATE = {EXEC_STATE}
icmd.rest.parameters.MSG_NUM = {MSG_NUM}
icmd.rest.parameters.PREP_STATE = {PREP_STATE}
icmd.rest.parameters.PURGEDB = {PURGEDB}
icmd.rest.parameters.REQUEST_ID = {REQUEST_ID}
icmd.rest.parameters.ROLE_ID = {ROLE_ID}
icmd.rest.parameters.SCID = {SCID}
icmd.rest.parameters.TIME = {TIME}
icmd.rest.parameters.WHEN = {WHEN}

icmd.rest.serviceUris.[ICMD_REQUEST_NAME].description=URI pattern, including placeholders, for the specified ICMD REST request.
icmd.rest.serviceUris.[ICMD_REQUEST_NAME].formatHint=
icmd.rest.serviceUris.CONNECT_TO_STATION = icmd/{SCID}/connection_state?state=connect&id={DSS_ID}
icmd.rest.serviceUris.DELETE_RADIATION_REQUEST = icmd/{SCID}/radiation_requests/{ROLE_ID}/{REQUEST_ID}?purgedb={PURGEDB}
icmd.rest.serviceUris.DISCONNECT_FROM_STATION = icmd/{SCID}/connection_state?state=disconnect
icmd.rest.serviceUris.FLUSH_REQUESTS = icmd/{SCID}/radiation_requests/{ROLE_ID}?purgedb={PURGEDB}
icmd.rest.serviceUris.GET_BITRATE_MODINDEX = icmd/{SCID}/bitrate
icmd.rest.serviceUris.GET_CONFIGURATION = icmd/{SCID}/configuration
icmd.rest.serviceUris.GET_CONNECTION_STATE = icmd/{SCID}/connection_state
icmd.rest.serviceUris.GET_DMS_BROADCAST_STATUS_MESSAGES = icmd/{SCID}/status?last_received_time={TIME}&last_received_counter={MSG_NUM}
icmd.rest.serviceUris.GET_RADIATION_REQUESTS = icmd/{SCID}/radiation_requests
icmd.rest.serviceUris.GET_REQUEST_STATE = icmd/{SCID}/radiation_requests/{ROLE_ID}/{REQUEST_ID}
icmd.rest.serviceUris.INSERT_SCMF = icmd/{SCID}/radiation_requests/{ROLE_ID}
icmd.rest.serviceUris.SET_AGGREGATION_METHOD = icmd/{SCID}/aggregation_algorithm?algorithm={AGG_METHOD}
icmd.rest.serviceUris.SET_BITRATE = icmd/{SCID}/bitrate?rate={BITRATE}
icmd.rest.serviceUris.SET_EXECUTION_METHOD = icmd/{SCID}/execution_method?method={EXEC_METHOD}&when={WHEN}
icmd.rest.serviceUris.SET_EXECUTION_MODE = icmd/{SCID}/execution_mode?mode={EXEC_MODE}&when={WHEN}
icmd.rest.serviceUris.SET_EXECUTION_STATE = icmd/{SCID}/execution_state?state={EXEC_STATE}&when={WHEN}
icmd.rest.serviceUris.SET_PREPARTION_STATE = icmd/{SCID}/preparation_state?state={PREP_STATE}
