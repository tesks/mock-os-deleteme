#
# AMMOS Mission Data Processing and Control System (AMPCS)
# Initial Author: D. Eckels
# Creation Date: 05/23/17
#
# Copyright (c) 2006-2017. California Institute of Technology.
# ALL RIGHTS RESERVED.
# U.S. Government sponsorship acknowledged.
#
# This software is subject to U. S. export control laws and
# regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
# extent that the software is subject to U.S. export control laws
# and regulations, the recipient has the responsibility to obtain
# export licenses or other export authority as may be required
# before exporting such information to foreign countries or
# providing access to foreign nationals.
# 
# This is the AMPCS properties file containing properties for Physical
# Layer Operations Procedure (PLOP) related tasks
#
# This file is loaded using the standard AMPCS configuration file search
# mechanism, which typically looks first at the AMPCS system configuration 
# level, then at the project/mission configuration level, then at the user 
# configuration level. All properties files that are found will be loaded 
# in this order, with any configuration properties specified in later files 
# overriding those found in earlier files. It is not necessary to override
# all properties at the project or user level. If properties are omitted
# at any level, the property values loaded at the previous level remain in
# effect.
#
# Properties and their corresponding values must be included on a single line.
#
# Change Notes:
#

########################################################
plop.categoryDescription=PLOP properties configure how the uplink system deals with the Physical Layer Operations Procedure \
during command transmission.

plop.sequence.blockDescription=Properties that control PLOP-related byte sequences and where they are inserted.

plop.sequence.acquisition.description=Indicates which uplink sessions are prefaced with an acquisition sequence. 
plop.sequence.acquisition.validValues=all | first | none
plop.sequence.acquisition.behavioralNotes=This configuration option is ignored if plop.type is set to "1".
plop.sequence.acquisition=first

plop.sequence.acquisition.hex.description=Command acquisition sequence byte value, hex.
plop.sequence.acquisition.hex.formatHint=2 hex digits, no leading 0x
plop.sequence.acquisition.hex=55

plop.sequence.acquisition.length.description=Length, in bits, of the acquisition sequence inserted at the beginning of a command load. Must be divisible by 8.
plop.sequence.acquisition.length=176

plop.sequence.idle.description=Where to insert idle sequences in a command load. 
plop.sequence.idle.validValues=none | all | last
plop.sequence.idle.behavioralNotes=Idle sequences may be omitted (none), inserted after every CLTU (all), or inserted after the last CLTU (last).          
plop.sequence.idle=last

plop.sequence.idle.hex.description=Command idle sequence byte value, hex.
plop.sequence.idle.hex.formatHint=2 hex digits, no leading 0x
plop.sequence.idle.hex=55

plop.sequence.idle.length.description=Length, in bits, of the idle sequence inserted between CLTUs. Must be divisible by 8.
plop.sequence.idle.length=64

plop.type.description=Use PLOP 1 or 2 procedure.
plop.type.validValues=1 | 2
plop.type.behavioralNotes=If 1, an acquisition sequence is sent prior to each CLTU and the receiver is inactive between each. If 2, an acquisition sequence is sent prior to the first CLTU only (i.e., the beginning of a command load) and the receiver remains active.
plop.type=2
