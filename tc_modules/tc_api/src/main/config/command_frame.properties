#
# AMMOS Mission Data Processing and Control System (AMPCS)
# Initial Author: D. Eckels
# Creation Date: 05/23/17
#
# Copyright (c) 2006-2017. California Institute of Technology.
# ALL RIGHTS RESERVED.
# U.S. Government sponsorship acknowledged.
#
# This software is subject to U. S. export control laws and
# regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
# extent that the software is subject to U.S. export control laws
# and regulations, the recipient has the responsibility to obtain
# export licenses or other export authority as may be required
# before exporting such information to foreign countries or
# providing access to foreign nationals.
# 
# This is the AMPCS properties file containing properties for telecommand frame
# construction and labeling.
#
# This file is loaded using the standard AMPCS configuration file search
# mechanism, which typically looks first at the AMPCS system configuration 
# level, then at the project/mission configuration level, then at the user 
# configuration level. All properties files that are found will be loaded 
# in this order, with any configuration properties specified in later files 
# overriding those found in earlier files. It is not necessary to override
# all properties at the project or user level. If properties are omitted
# at any level, the property values loaded at the previous level remain in
# effect.
#
# Properties and their corresponding values must be included on a single line.
#
# Change Notes:
# MPCS-8943 - Reviewed and documented for R8 (7/12/17)
# MPCS-10928 - Add CFDP virtual frame type and FECF type by virtual channel number (07/17/19)
########################################################

commandFrame.categoryDescription=These properties control the telecommand frame construction and labeling. This includes all \
telecommand frame header and footer information, how many commands are allowed per frame, how frames are used in command sessions, \
and how virtual channel IDs are employed.

commandFrame.data.blockDescription=These properties control the construction and labeling of telecommand frames and sessions, \
linked to the different classes of command data that can be uplinked. Delimiter frame definition is also included.

commandFrame.data.Delimiter.blockDescription=Configuration properties for delimiter frames.

commandFrame.data.Delimiter.beginHex.description=Hex representation for the constant data section for beginning delimiter frames, without leading 'x'
commandFrame.data.Delimiter.beginHex.behavioralNotes=Character length of value must be divisible by 2
commandFrame.data.Delimiter.beginHex=0000

commandFrame.data.Delimiter.endHex.description=Hex representation for the constant data section for ending delimiter frames, without leading 'x'
commandFrame.data.Delimiter.endHex.behavioralNotes=Character length of value must be divisible by 2
commandFrame.data.Delimiter.endHex=0000

commandFrame.data.Delimiter.hasFECF.description=Indicates if delimiter frames include a forward error correction code
commandFrame.data.Delimiter.hasFECF.validValues=true | false
commandFrame.data.Delimiter.hasFECF=false

commandFrame.data.Delimiter.hasSequenceCounter.description=Indicates if delimiter frames include a command sequence counter
commandFrame.data.Delimiter.hasSequenceCounter.validValues=true | false
commandFrame.data.Delimiter.hasSequenceCounter=false

commandFrame.data.Delimiter.virtualChannelNumber.description=Virtual channel number on which to send delimiter frames
commandFrame.data.Delimiter.validValues=0 to 7
commandFrame.data.Delimiter.virtualChannelNumber=5

commandFrame.data.FileLoad.blockDescription=Configuration properties for frames that carry file content.

commandFrame.data.FileLoad.beginSession.description=Indicates use of begin delimiter frames in file load command sessions. 
commandFrame.data.FileLoad.beginSession.validValues=first | all | none
commandFrame.data.FileLoad.beginSession.behavioralNotes='first' places a delimiter before the first frame; 'all' places delimiters before every frame, and 'none' uses no delimiters.
commandFrame.data.FileLoad.beginSession=first

commandFrame.data.FileLoad.endSession.description=Indicates use of end delimiter frames in file load command sessions. 
commandFrame.data.FileLoad.endSession.validValues=last | all | none
commandFrame.data.FileLoad.endSession.behavioralNotes='last' places delimiters after the last frame; 'all' places delimiters after every frame, and 'none' uses no delimiters
commandFrame.data.FileLoad.endSession=last

commandFrame.data.FileLoad.hasFECF.description=Indicates if file load frames include a forward error correction code.
commandFrame.data.FileLoad.hasFECF.validValues=true | false
commandFrame.data.FileLoad.hasFECF=true

commandFrame.data.FileLoad.hasSequenceCounter.description=Indicates if file load frames include a command sequence counter.
commandFrame.data.FileLoad.hasSequenceCounter.validValues=true | false
commandFrame.data.FileLoad.hasSequenceCounter=true

commandFrame.data.FileLoad.maxFileLoadByteSize.description=Maximum data payload size, in bytes, for file loads.
commandFrame.data.FileLoad.maxFileLoadByteSize.validValues=1 to Integer.MAX_VALUE
commandFrame.data.FileLoad.maxFileLoadByteSize=260220

commandFrame.data.FileLoad.virtualChannelNumber.description=Virtual channel number on which to send file load frames.
commandFrame.data.FileLoad.virtualChannelNumber.validValues=0 to 7
commandFrame.data.FileLoad.virtualChannelNumber=2

commandFrame.data.FlightSoftwareCommand.blockDescription=Configuration properties for frames that contain flight software commands.

commandFrame.data.FlightSoftwareCommand.beginSession.description=Indicates use of begin delimiter frames for flight software commands in command sessions. 
commandFrame.data.FlightSoftwareCommand.beginSession.validValues=first | all | none
commandFrame.data.FlightSoftwareCommand.beginSession.behavioralNotes='first' places a delimiter before the first frame; 'all' places delimiters before every frame, and 'none' uses no delimiters.
commandFrame.data.FlightSoftwareCommand.beginSession=all

commandFrame.data.FlightSoftwareCommand.endSession.description=Indicates use of end delimiter frames for flight software commands in command sessions.
commandFrame.data.FlightSoftwareCommand.endSession.validValues=last | all | none
commandFrame.data.FlightSoftwareCommand.endSession.behavioralNotes='last' places a delimiter after the last frame; 'all' places delimiters after every frame, and 'none' uses no delimiters
commandFrame.data.FlightSoftwareCommand.endSession=all

commandFrame.data.FlightSoftwareCommand.hasFECF.description=Indicates if flight software command frames include a forward error correction code.
commandFrame.data.FlightSoftwareCommand.hasFECF.validValues=true | false
commandFrame.data.FlightSoftwareCommand.hasFECF=true

commandFrame.data.FlightSoftwareCommand.hasSequenceCounter.description=Indicates if flight software command frames include a command sequence counter.
commandFrame.data.FlightSoftwareCommand.hasSequenceCounter.validValues=true | false
commandFrame.data.FlightSoftwareCommand.hasSequenceCounter=true

commandFrame.data.FlightSoftwareCommand.virtualChannelNumber.description=Virtual channel number on which to send flight software command frames.
commandFrame.data.FlightSoftwareCommand.virtualChannelNumber.validValues=0 to 7
commandFrame.data.FlightSoftwareCommand.virtualChannelNumber=1

commandFrame.data.HardwareCommand.blockDescription=Configuration properties for frames that contain flight hardware commands.

commandFrame.data.HardwareCommand.beginSession.description=Indicates use of begin delimiter frames for hardware commands in command sessions. 
commandFrame.data.HardwareCommand.beginSession.validValues=first | all | none
commandFrame.data.HardwareCommand.beginSession.behavioralNotes='first' places a delimiter before the first frame; 'all' places delimiters before every frame, and 'none' uses no delimiters.
commandFrame.data.HardwareCommand.beginSession=all

commandFrame.data.HardwareCommand.endSession.description=Indicates use of end delimiter frames for hardware commands in command sessions. 
commandFrame.data.HardwareCommand.endSession.validValues=last | all | none
commandFrame.data.HardwareCommand.endSession.behavioralNotes='last' places a delimiter after the last frame; 'all' places delimiters after every frame, and 'none' uses no delimiters
commandFrame.data.HardwareCommand.endSession=all

commandFrame.data.HardwareCommand.hasFECF.description=Indicates if hardware command frames include a forward error correction code.
commandFrame.data.HardwareCommand.hasFECF.validValues=true | false
commandFrame.data.HardwareCommand.hasFECF=false

commandFrame.data.HardwareCommand.hasSequenceCounter.description=Indicates if hardware command frames include a command sequence counter.
commandFrame.data.HardwareCommand.hasSequenceCounter.validValues=true | false
commandFrame.data.HardwareCommand.hasSequenceCounter=false

commandFrame.data.HardwareCommand.virtualChannelNumber.description=Virtual channel number on which to send hardware command frames.
commandFrame.data.HardwareCommand.virtualChannelNumber.validValues=0 to 7
commandFrame.data.HardwareCommand.virtualChannelNumber=0

commandFrame.data.SequenceDirective.blockDescription=Configuration properties for frames that contain flight sequence directives.

commandFrame.data.SequenceDirective.beginSession.description=Indicates use of begin delimiter frames for sequence directives in command sessions. 
commandFrame.data.SequenceDirective.beginSession.validValues=first | all | none
commandFrame.data.SequenceDirective.beginSession.behavioralNotes='first' places a delimiter before the first frame; 'all' places delimiters before every frame, and 'none' uses no delimiters.
commandFrame.data.SequenceDirective.beginSession=all

commandFrame.data.SequenceDirective.endSession.description=Indicates use of end delimiter frames for sequence directive in command sessions. 
commandFrame.data.SequenceDirective.endSession.validValues=last | all | none
commandFrame.data.SequenceDirective.endSession.behavioralNotes='last' places a delimiter after the last frame; 'all' places delimiters after every frame, and 'none' uses no delimiters
commandFrame.data.SequenceDirective.endSession=all

commandFrame.data.SequenceDirective.hasFECF.description=Indicates if sequence directive frames include a forward error correction code
commandFrame.data.SequenceDirective.hasFECF.validValues=true | false
commandFrame.data.SequenceDirective.hasFECF=true

commandFrame.data.SequenceDirective.hasSequenceCounter.description=Indicates if sequence directive frames include a command sequence counter
commandFrame.data.SequenceDirective.hasSequenceCounter.validValues=true | false
commandFrame.data.SequenceDirective.hasSequenceCounter=true

commandFrame.data.SequenceDirective.virtualChannelNumber.description=Virtual channel number on which to send sequence directive frames
commandFrame.data.SequenceDirective.virtualChannelNumber.validValues=0 to 7
commandFrame.data.SequenceDirective.virtualChannelNumber=2

commandFrame.data.Cfdp.blockDescription=Configuration properties for frames that contain Cfdp transactions and files.

commandFrame.data.Cfdp.beginSession.description=Indicates use of begin delimiter frames for Cfdp frames in command sessions. 
commandFrame.data.Cfdp.beginSession.validValues=first | all | none
commandFrame.data.Cfdp.beginSession.behavioralNotes='first' places a delimiter before the first frame; 'all' places delimiters before every frame, and 'none' uses no delimiters.
commandFrame.data.Cfdp.beginSession=all

commandFrame.data.Cfdp.endSession.description=Indicates use of end delimiter frames for Cfdp frames in command sessions. 
commandFrame.data.Cfdp.endSession.validValues=last | all | none
commandFrame.data.Cfdp.endSession.behavioralNotes='last' places a delimiter after the last frame; 'all' places delimiters after every frame, and 'none' uses no delimiters
commandFrame.data.Cfdp.endSession=all

commandFrame.data.Cfdp.hasFECF.description=Indicates if Cfdp frames include a forward error correction code
commandFrame.data.Cfdp.hasFECF.validValues=true | false
commandFrame.data.Cfdp.hasFECF=true

commandFrame.data.Cfdp.hasSequenceCounter.description=Indicates if Cfdp frames include a command sequence counter
commandFrame.data.Cfdp.hasSequenceCounter.validValues=true | false
commandFrame.data.Cfdp.hasSequenceCounter=true

commandFrame.data.Cfdp.virtualChannelNumber.description=Virtual channel number on which to send Cfdp frames
commandFrame.data.Cfdp.virtualChannelNumber.validValues=0 to 7
commandFrame.data.Cfdp.virtualChannelNumber=3

commandFrame.executionString.blockDescription=Properties that configure use of the telecommand frame virtual channel ID \
to address different flight strings (processors).

commandFrame.executionString.stringId.description=Default command string ID.
commandFrame.executionString.stringId.validValues=A | B | AB
commandFrame.executionString.stringId.behavioralNotes=The string ID VCID is packed into the upper 3 bits of the VCID field in the telecommand frame header
commandFrame.executionString.stringId=A

commandFrame.executionString.A.description=VCID for execution string A
commandFrame.executionString.A.validValues=0 to 7
commandFrame.executionString.A=0

commandFrame.executionString.AB.description=VCID for execution string B
commandFrame.executionString.AB.validValues=0 to 7
commandFrame.executionString.AB=6

commandFrame.executionString.B.description=VCID for execution string AB
commandFrame.executionString.B.validValues=0 to 7
commandFrame.executionString.B=3

commandFrame.fecf.bytes.description=Length in bytes of the command frame forward error correction field
commandFrame.fecf.bytes.validValues=2 | 4 | 8
commandFrame.fecf.bytes.behavioralNotes=If an invalid value is supplied, the next largest valid FECF length will be used. If the supplied value is invalid and over 8, it will be reduced to 8
commandFrame.fecf.bytes=2

commandFrame.fecf.default.type.description=The type of encoding to be used for the FECF value of all uplink frames
commandFrame.fecf.default.type.validValues=EEACSUM55 | CRC16
commandFrame.fecf.default.type=EEACSUM55

commandFrame.fecf.[VIRTUAL_CHANNEL_NUMBER].type.description=The type of encoding to be used for a specific virtual channel
commandFrame.fecf.[VIRTUAL_CHANNEL_NUMBER].type.validValues=EEACSUM55 | CRC16


commandFrame.maxBytes.description=Maximum total length, in bytes, of a telecommand frame.
commandFrame.maxBytes.validValues=1 to 1024
commandFrame.maxBytes=1024

commandFrame.maxDataBytes.description=Maximum data length, in bytes, of a telecommand frame.
commandFrame.maxDataBytes.validValues=1 to 1019
commandFrame.maxDataBytes=1019

commandFrame.randomization.algorithm.description=Fully-qualified of the class for performing randomization of command frames. Only applicable to file loads, as it is the only uplink path that does not use the CTS library. Frame randomization in CTS is controlled by mission settings in TTC's telecmd.xml file.
commandFrame.randomization.algorithm=jpl.gds.tc.impl.frame.random.CcsdsPseudoRandomizerAlgorithm

commandFrame.randomization.use.description=Enables/disables pseudo-randomization of telecommand frames. Only applicable to file loads, as it is the only uplink path that does not use the CTS library. Frame randomization in CTS is controlled by mission settings in TTC's telecmd.xml file.
commandFrame.randomization.use.validValues=true | false
commandFrame.randomization.use.validValues.behavioralNotes=If enabled, randomization.algorithm must be defined
commandFrame.randomization.use=false

commandFrame.sessionRepeat.description=Default command session repeat count. Telecommand frames will be included this number of times + 1 in the binary command output.
commandFrame.sessionRepeat.validValues=0 to Integer.MAX_VALUE
commandFrame.sessionRepeat=0

commandFrame.version.description=Telecommand frame version number. This is included in the command frame header.
commandFrame.version.behavioralNotes=This is the "minus 1" value that is to be transmitted, not the actual value
commandFrame.version.validValues=0 to 2
commandFrame.version=0
