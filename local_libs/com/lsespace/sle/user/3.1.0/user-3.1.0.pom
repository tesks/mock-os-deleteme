<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.lsespace.sle</groupId>
	<artifactId>user</artifactId>
	<version>3.1.0</version>
	<name>LSE SLE USER</name>
	<description>LSE SLE USER</description>
	<packaging>bundle</packaging>

	<developers>
		<developer>
			<name>Javier Pena</name>
			<email>javier.pena@lsespace.com</email>
			<organization>LSE Space</organization>
		</developer>
	</developers>

	<scm>
		<developerConnection>scm:svn:https://xdev.lsespace.com/svn/SLE/bundles/com.lsespace.sle.user/tags/release-com.lsespace.sle.user-3.1.0</developerConnection>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
		<osgi.symbolicName>${project.groupId}.${project.artifactId}</osgi.symbolicName>
		<osgi.timestamp>v${maven.build.timestamp}</osgi.timestamp>

		
		<!-- actors dependencies versions -->
		<akka.version>2.4.1</akka.version>

		<!-- actors transitive dependencies, this are only keep for reference -->
		<scala.version>2.11.7</scala.version>
		<com.typesafe.config.version>1.3.0</com.typesafe.config.version>		
		
		<slf4j.version>1.7.6</slf4j.version>
		
		<org.bouncycastle.version>1.47</org.bouncycastle.version>

		<!-- Test versions -->
		<testng.version>6.8.8</testng.version>
		<logback.version>1.1.2</logback.version>

		<!-- maven plugins versions -->
		<cobertura.version>2.7</cobertura.version>

		<maven-compiler-plugin.version>3.2</maven-compiler-plugin.version>
		<build-helper-maven-plugin.version>1.9.1</build-helper-maven-plugin.version>
		<maven-bundle-plugin.version>2.5.3</maven-bundle-plugin.version>
		<maven-surefire-plugin.version>2.18</maven-surefire-plugin.version>
		<maven-dependency-plugin.version>2.9</maven-dependency-plugin.version>
		<maven-jar-plugin.version>2.5</maven-jar-plugin.version>
		<maven-war-plugin.version>2.5</maven-war-plugin.version>
		<maven-release-plugin.version>2.5.1</maven-release-plugin.version>
		<maven-source-plugin.version>2.4</maven-source-plugin.version>
		<maven-javadoc-plugin.version>2.10.2</maven-javadoc-plugin.version>
		<maven-assembly-plugin.version>2.5.3</maven-assembly-plugin.version>
		<license-maven-plugin.version>1.8</license-maven-plugin.version>

	</properties>

	<dependencies>
		<!--  This would be needed to added JSR-303 annotations. -->
		<!--  This is not straight forward for OSGI environments -->
		<!--  Therefore this would be left for future versions. -->
		<!-- 
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
		</dependency>
		-->
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-actor_2.11</artifactId>
			<version>${akka.version}</version>
		</dependency>
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-slf4j_2.11</artifactId>
			<version>${akka.version}</version>
			<!-- we would like to use a newer version of slf4j -->
			<!-- Therefore we excleude the akka dependency -->
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Force the use of a newer slf4j version. -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
		</dependency>
		<!-- <dependency> <groupId>org.scala-lang</groupId> <artifactId>scala-library</artifactId> 
			<version>${scala.version}</version> <type>jar</type> </dependency> <dependency> 
			<groupId>com.typesafe</groupId> <artifactId>config</artifactId> <version>${com.typesafe.config.version}</version> 
			</dependency> -->
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>${org.bouncycastle.version}</version>
		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>com.typesafe.akka</groupId>
			<artifactId>akka-testkit_2.11</artifactId>
			<version>${akka.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<defaultGoal>package</defaultGoal>
		<finalName>${project.groupId}.${project.artifactId}-${project.version}</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>${build-helper-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>parse-version</id>
						<goals>
							<goal>parse-version</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>${maven-bundle-plugin.version}</version>
				<extensions>true</extensions>
				<!-- <executions> <execution> <id>bundle-manifest</id> <phase>process-classes</phase> 
					<goals> <goal>manifest</goal> </goals> </execution> </executions> -->
				<configuration>
					<manifestLocation>META-INF</manifestLocation>
					<instructions>
						<_removeheaders>
							Bnd-LastModified,Build-Jdk,Built-By,Created-By,Include-Resource,Tool,Private-Package
						</_removeheaders>
						<Bundle-SymbolicName>
							${osgi.symbolicName};singleton:=true
						</Bundle-SymbolicName>
						<Bundle-Version>
							${parsedVersion.osgiVersion}_${osgi.timestamp}
						</Bundle-Version>
						<Bundle-ClassPath>
							.
						</Bundle-ClassPath>
						<Bundle-RequiredExecutionEnvironment>JavaSE-1.8</Bundle-RequiredExecutionEnvironment>
						<Export-Package>
							<!-- This should be commented out if the impl packages should not 
								be exported. -->
							<!-- !*.impl, -->
							${osgi.symbolicName}*;version="${parsedVersion.osgiVersion}"
						</Export-Package>
						<Import-Package>
							!sun.net*,
							*
						</Import-Package>
					</instructions>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<suiteXmlFiles>
						<suiteXmlFile>src/test/resources/testng.xml</suiteXmlFile>
					</suiteXmlFiles>
				</configuration>
			</plugin>

			<!-- Generate the javadoc to be deploy to the maven repository. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<configuration>
					<excludePackageNames>*.impl.*</excludePackageNames>
				</configuration>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<!-- So it is build before the maven assembly runs during release. -->
						<phase>prepare-package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Generate a source code jar to be place in the maven repo. -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>${maven-source-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<!-- So it is build before the maven assembly runs during relase -->
						<phase>prepare-package</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>${maven-release-plugin.version}</version>
				<configuration>
					<tagNameFormat>release-${project.groupId}.${project.artifactId}-@{project.version}</tagNameFormat>
					<!-- During release:perform, enable the "release" profile -->
					<releaseProfiles>release</releaseProfiles>
				</configuration>
			</plugin>


			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${license-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>download-licenses</id>
						<goals>
							<goal>download-licenses</goal>
						</goals>
						<phase>validate</phase>
						<configuration>
							<excludedScopes>test</excludedScopes>
						</configuration>
					</execution>
				</executions>
			</plugin>

		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											license-maven-plugin
										</artifactId>
										<versionRange>
											[1.8,)
										</versionRange>
										<goals>
											<goal>
												download-licenses
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<distributionManagement>
		<!-- Publish versioned releases here -->
		<repository>
			<id>lsenexus</id>
			<name>My releases</name>
			<url>https://xdev.lsespace.com/nexus/content/repositories/releases</url>
		</repository>

		<!-- Publish snapshots here -->
		<snapshotRepository>
			<id>lsenexus</id>
			<name>My snapshots</name>
			<url>https://xdev.lsespace.com/nexus/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<!-- Profiles are no inherit in maven. They are only reused in Aggregation 
		from project agregator to the agregated projects. -->
	<profiles>
		<profile>
			<!-- This profile is activated by the maven release plugin. -->
			<id>release</id>
			<build>
				<plugins>
					<!-- build a zip file use for the distribution of the release base on 
						the assembly. -->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>${maven-assembly-plugin.version}</version>
						<configuration>
							<descriptor>src/assembly/dist.xml</descriptor>
						</configuration>
						<executions>
							<execution>
								<id>create-archive</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- This profile is to activate in the jenkins job configuration using 
				-Pjenkins -->
			<id>jenkins</id>
			<build>

				<!-- Perform metrics -->
				<plugins>
					<!-- CODE COVERAGE -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>cobertura-maven-plugin</artifactId>
						<version>${cobertura.version}</version>
						<configuration>
							<formats>
								<format>xml</format>
							</formats>
						</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>cobertura</goal>
								</goals>
							</execution>
						</executions>
						<!-- <executions> <execution> <goals> <goal>clean</goal> <goal>check</goal> 
							</goals> </execution> </executions> -->
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<properties>
				<osgi.timestamp>vTimestamp</osgi.timestamp>
			</properties>
		</profile>
	</profiles>
</project>
