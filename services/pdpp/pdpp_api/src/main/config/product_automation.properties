#
# AMMOS Mission Data Processing and Control System (AMPCS)
# Creation Date: 06/09/16
#
# Copyright (c) 2006-2017. California Institute of Technology.
# ALL RIGHTS RESERVED.
# U.S. Government sponsorship acknowledged.
#
# This software is subject to U. S. export control laws and
# regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
# extent that the software is subject to U.S. export control laws
# and regulations, the recipient has the responsibility to obtain
# export licenses or other export authority as may be required
# before exporting such information to foreign countries or
# providing access to foreign nationals.
# 
# This is the AMPCS properties file containing core product automation
# properties
#
# This file is loaded using the standard AMPCS configuration file search
# mechanism, which typically looks first at the AMPCS system configuration 
# level, then at the project/mission configuration level, then at the user 
# configuration level. All properties files that are found will be loaded 
# in this order, with any configuration properties specified in later files 
# overriding those found in earlier files. It is not necessary to override
# all properties at the project or user level. If properties are omitted
# at any level, the property values loaded at the previous level remain in
# effect.
#
# Properties and their corresponding values must be included on a 
# single line.
#
# Change Notes:
# MPCS-8179 - Added file  - 06/09/16
# MPCS-8608 - Changed name of file to product_automation.properties,
#             changed prefix to productAutomation
#
########################################################

productAutomation.categoryDescription=The Product Automation Properties dictate which components of Post-Downlink Product Processing (PDPP) are to run, how often they are run or checked, how they operate, and when components are to be terminated.

productAutomation.chilldown.maxerrors.description=Max consecutive errors allowed before the product automation handler in chill_down will shut itself down.
productAutomation.chilldown.maxerrors=10

########################################################################################################################################################################

productAutomation.hibernate.blockDescription=These items are used to set all the hibernate properties of the configuration programmatically.  If any need to be added just add to the configList.

productAutomation.hibernate.doconnectionadjustments.description=Allow changes to the number of simultaneous database hibernate connections used by product automation.
productAutomation.hibernate.doconnectionadjustments.validValues=true | false
productAutomation.hibernate.doconnectionadjustments=true

productAutomation.hibernate.dbconnectionschange.description=Value to increase or decrease when changing the number of hibernate connections used by product automation.
productAutomation.hibernate.dbconnectionschange=20

productAutomation.hibernate.minmaxconnections.description=The minimum value of the number of hibernate connections used for product automation.
productAutomation.hibernate.minmaxconnections=256

productAutomation.hibernate.maxmaxconnections.description=The upper bound of the number of hibernate connections used for product automation.
productAutomation.hibernate.maxmaxconnections=500

productAutomation.hibernate.config.description=This is the table database to be used.

productAutomation.hibernate.config.hibernate.connection.isolation=2

productAutomation.hibernate.config.hibernate.connection.driver_class.description=Fully-qualified class name of the JDBC driver used for the hibernate connection.
productAutomation.hibernate.config.hibernate.connection.driver_class=org.mariadb.jdbc.Driver

productAutomation.hibernate.config.hibernate.connection.release_mode=after_transaction
productAutomation.hibernate.config.jdbc.fetch_size=15
productAutomation.hibernate.config.hibernate.dialect=org.hibernate.dialect.MySQLInnoDBDialect
productAutomation.hibernate.config.hibernate.order_updates=true
productAutomation.hibernate.config.hibernate.connection.provider_class=org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider
productAutomation.hibernate.config.hibernate.c3p0.min_size=1
productAutomation.hibernate.config.hibernate.c3p0.timeout=1000
productAutomation.hibernate.config.hibernate.c3p0.max_size=50
productAutomation.hibernate.config.hibernate.c3p0.idle_test_period=10000
productAutomation.hibernate.config.hibernate.c3p0.acquireIncrement=3
productAutomation.hibernate.config.hibernate.c3p0.maxIdleTimeExcessConnections=180

# MPCS-4293 - Adding second level cache properties here.  This should be a relative path that will have the CHILL_GDS path added to it.
#The cache is only for the pdpp gui but the entities are set up for caching, so the cache needs to be set up no matter what.
productAutomation.hibernate.config.hibernate.cache.region.factory_class=org.hibernate.cache.ehcache.EhCacheRegionFactory
productAutomation.hibernate.config.net.sf.ehcache.configurationResourceName=/config/ehcache.xml 
productAutomation.hibernate.config.net.sf.ehcache.configurationResourceName.formatHint=Unix file path relative to $CHILL_GDS

productAutomation.hibernate.dburl.description=This will tell hibernate/ what database is used configure the session factory.
productAutomation.hibernate.dburl.host.description=The database host for PDPP.  This does not have to be the same host that is running the normal chill database.
productAutomation.hibernate.dburl.host.formatHint=Must be a valid unix host name or IP
productAutomation.hibernate.dburl.host=localhost
productAutomation.hibernate.dburl.user.description=The database user for PDPP.  This does not have to be the same user that is accessing the normal chill database.
productAutomation.hibernate.dburl.user=mpcs
productAutomation.hibernate.dburl.password.description=The encrypted database password for PDPP.  
productAutomation.hibernate.dburl.password.behavioralNotes=This must be generated using the chill_encrypt_password command. If left blank, it is assumed there is no password.
productAutomation.hibernate.dburl.password=
productAutomation.hibernate.dburl.name.description=The name of the PDPP database, with URL connection parameters.  
productAutomation.hibernate.dburl.name.behavioralNotes=The mission name is added as a prefix. 
productAutomation.hibernate.dburl.name=pdpp_automation_v1_3_0?autoReconnect=true

productAutomation.hibernate.dburl.port.description=The port for the hibernate/PDPP database.
productAutomation.hibernate.dburl.port.validValues=0 to 65535
productAutomation.hibernate.dburl.port=3306

productAutomation.hibernate.annotatedclasses.description=Comma-separated list of fully-qualified class names for classes utilized to hold and represent database data sets in product automation.
productAutomation.hibernate.annotatedclasses=jpl.gds.product.automation.hibernate.entity.ProductAutomationAction,jpl.gds.product.automation.hibernate.entity.ProductAutomationClassMap,\
jpl.gds.product.automation.hibernate.entity.ProductAutomationProcess,jpl.gds.product.automation.hibernate.entity.ProductAutomationProduct,\
jpl.gds.product.automation.hibernate.entity.ProductAutomationStatus,jpl.gds.product.automation.hibernate.entity.ProductAutomationLog

########################################################################################################################################################################

productAutomation.subprocess.blockDescription=Configuration values for the subprocesses, the processes that perform the individual operations on product files. 

productAutomation.subprocesses.maxconsecutiveerrors.description=Max errors a processor (PDPP subprocess) will take before killing itself
productAutomation.subprocesses.maxconsecutiveerrors=10

productAutomation.subprocesses.maxacceptedresult.description=Restricts the number of actions a processor (PDPP subprocess) can claim to do work on.
productAutomation.subprocesses.maxacceptedresult.behavioralNotes=If there is a huge list, other actions that have been assigned could time out while the process is working, and then they will get reassigned, and the subprocess will be killed.
productAutomation.subprocesses.maxacceptedresult=25

productAutomation.subprocesses.selfkilltime.description=This value is in milliseconds before the PDPP subprocess will shutdown if no input products have been processed.
productAutomation.subprocesses.selfkilltime=500000

productAutomation.subprocesses.cycletime.description=If a subprocess has no work to perform, this is the amount of time in milliseconds it will sleep before checking to see if it has been assigned work.
productAutomation.subprocesses.cycletime=5000		

productAutomation.subprocesses.lookupretrycount.description=Limits the times the subprocess will try to look itself up before calling it quits and exiting with a fatal.
productAutomation.subprocesses.lookupretrycount.behavioralNotes=This limit is to prevent a race condition when the subprocess starts up and when the arbiter writes the process object to the DB.
productAutomation.subprocesses.lookupretrycount=40

productAutomation.subprocesses.startupdelay.description=The number of milliseconds that a new processor (PDPP subprocess) will wait before trying to start up.
productAutomation.subprocesses.startupdelay=2000

productAutomation.subprocesses.idletimeclosedbconnections.description=Idle time ,in milliseconds, before a process will close the store controller to the DB and free up DB connections.
productAutomation.subprocesses.idletimeclosedbconnections=30000

########################################################################################################################################################################

productAutomation.automationgui.usecache.description=Indicates if the cache should be utilized for the PDPP GUI.
productAutomation.automationgui.usecache.validValues=true | false
productAutomation.automationgui.usecache=false 

########################################################################################################################################################################

productAutomation.arbiter.blockDescription=The arbiter properties are primarily used to configure the helper processes started up by the arbiter. \
This includes the action categorizers (one is started for each type of action), action creater, and load balancer.

productAutomation.arbiter.maxerrors.description=The number of errors the product automation arbiter will tolerate before it shuts down.
productAutomation.arbiter.maxerrors=20

productAutomation.arbiter.host.description=If this field is defined, it can limit the hosts that the product automation can run on.
productAutomation.arbiter.host=

productAutomation.arbiter.actioncategorizer.blockDescription=Action categorizer properties are not only used by the action categorizer, but also the load balancer. These properties are utilized to determine how often and how many products are assigned (or reassigned) to processes and when processes are forcibly terminated

productAutomation.arbiter.actioncategorizer.processidlekilltime.description=Idle time in milliseconds for a processor to initialize before the arbiter will kill it.
productAutomation.arbiter.actioncategorizer.processidlekilltime=60000

productAutomation.arbiter.actioncategorizer.actionunacceptedreassignidletime.description=Time in milliseconds for an action to be accepted after being assigned before it will be reassigned
productAutomation.arbiter.actioncategorizer.actionunacceptedreassignidletime=120000

productAutomation.arbiter.actioncategorizer.actionacceptedreassignidletime.description=Time in milliseconds after an action has been accepted before it will be reassigned.
productAutomation.arbiter.actioncategorizer.actionacceptedreassignidletime=1200000

productAutomation.arbiter.actioncategorizer.cycletime.description=Main arbiter cycle wait time in milliseconds.
productAutomation.arbiter.actioncategorizer.cycletime=5000

productAutomation.arbiter.actioncategorizer.processscript.description=Process script name, relative to $CHILL_GDS/bin/admin.
productAutomation.arbiter.actioncategorizer.processscript=chill_pdpp_automation

# MPCS-8180  - 07/26/16 added TransactionBlockSize, ProcessDeadTime, and LoadDifference properties
productAutomation.arbiter.actioncategorizer.transactionblocksize.description=The number of transactions pulled in any given group
productAutomation.arbiter.actioncategorizer.transactionblocksize=50

productAutomation.arbiter.actioncategorizer.processdeadtime.description=Time in milliseconds that a process is given to work on a particular action before it is assumed dead
productAutomation.arbiter.actioncategorizer.processdeadtime=60000

productAutomation.arbiter.actioncategorizer.loaddifference.description=If more than one process of a given type is running, the number of actions any product can have more than another before it is load balanced.
productAutomation.arbiter.actioncategorizer.loaddifference.behavioralNotes=When each of the productAutomation.arbiter.parallelprocessors.counts values are 1, this property is ignored.
productAutomation.arbiter.actioncategorizer.loaddifference=200

# MPCS-6469 - 2014 - The checker classes that will be used by the arbiter to test if products need to be processed by the PDPP given.
productAutomation.arbiter.checkers.blockDescription=These properties name the classes that perform each of the checker actions and the priority/order that the actions are to be performed in if more than one action must be performed on a product.
productAutomation.arbiter.checkers.behavioralNotes=Any new PDPP needs to have the checker class added to this config block and also to add the mnemonic for the new PDPP to the checkers list below. If a checker is defined in the checkers block above but is not defined in the checkers list, it will not be used in the product automation. Products will be checked in the order specified in the checkers list. The default items should not be changed without consulting the MPCS Cog-E.

productAutomation.arbiter.checkers.logger=jpl.gds.product.automation.checkers.ConsoleLoggerChecker

## then update description/note to mention and we well derive order from it
productAutomation.arbiter.checkers.description=Define the order in which the checks will be processed.  Only checkers in this list will be used. 
productAutomation.arbiter.checkers=logger

# MPCS-6544 9/2014 - Added
productAutomation.arbiter.parallelprocessors.blockDescription=Specifies the MAXIMUM number of parallel processes running for each type of PDPP process.  Note this number is for each mnemonic / fswId combination. \
If the number is 5 and their are two different dictionaries, the maximum number of processes for that type would actually be 10.

# MPCS-6758 - trivisk 10/2014 - This has been left in but it should not be used.
productAutomation.arbiter.parallelprocessors.behavioralNotes=There are issues when writing to the database to the same session with multiple processes.  These values below should NEVER be changed from 1 unless the issues are somehow fixed.

productAutomation.arbiter.parallelprocessors.backlog.description=The number of products waiting in a subprocess before a new subprocess will be spawned.
productAutomation.arbiter.parallelprocessors.backlog=500

productAutomation.arbiter.parallelprocessors.counts.correct=1
productAutomation.arbiter.parallelprocessors.counts.unwrap=1
productAutomation.arbiter.parallelprocessors.counts.compress=1
productAutomation.arbiter.parallelprocessors.counts.extract=1

########################################################################################################################################################################

productAutomation.productadder.classname.description=Fully-qualified name  of the class used to add products to the PDPP database
productAutomation.productadder.classname=

productAutomation.downlinkservice.classname.desription=Fully-qualified name of the class used to feed products from chill_down to the product adder class
productAutomation.downlinkservice.classname=jpl.gds.product.automation.AutomationDownlinkService

########################################################################################################################################################################
# MPCS-8180 07/14/16 added this property block

productAutomation.sessionfetchandadd.blockDescription=This block of properties is utilized for wait times in regard to retrieving and storing session entries in the PDPP database.

productAutomation.sessionfetchandadd.sleepafter.closeMS.description=How long to wait, in milliseconds, after closing the store controller
productAutomation.sessionfetchandadd.sleepafter.closeMS=1500

productAutomation.sessionfetchandadd.sleepafter.sessionstoreMS.description=How long to wait, in milliseconds, after storing to reload from the database
productAutomation.sessionfetchandadd.sleepafter.sessionstoreMS=200

productAutomation.sessionfetchandadd.reloadSessionAfterCreationRetries.description=Number of attempts to reload a session after it has been created
productAutomation.sessionfetchandadd.reloadSessionAfterCreationRetries=10
