#
# Copyright 2006-2019. California Institute of Technology.
#  ALL RIGHTS RESERVED.
#  U.S. Government sponsorship acknowledged.
#
#  This software is subject to U. S. export control laws and
#  regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
#  extent that the software is subject to U.S. export control laws
#  and regulations, the recipient has the responsibility to obtain
#  export licenses or other export authority as may be required
#  before exporting such information to foreign countries or
#  providing access to foreign nationals.
#
# AMMOS Mission Data Processing and Control System (AMPCS)
# Creation Date: 9/10/17
#
# This is the AMPCS properties file containing the CFDP Processor properties.
#
# This file is loaded using the standard AMPCS configuration file search
# mechanism, which typically looks first at the AMPCS system configuration
# level, then at the project/mission configuration level, then at the user
# configuration level. All properties files that are found will be loaded
# in this order, with any configuration properties specified in later files
# overriding those found in earlier files. It is not necessary to override
# all properties at the project or user level. If properties are omitted
# at any level, the property values loaded at the previous level remain in
# effect.
#
# Properties and their corresponding values must be included on a single line.
#
#
# Change Notes:
#
########################################################
cfdpProcessor.categoryDescription=Properties to configure CFDP Processor

cfdpProcessor.writable.config.file.description=Location of the saveable CFDP Processor configuration file. CFDP Processor will update the file automatically as user makes changes to its parameters, so it needs to be writable.
cfdpProcessor.writable.config.file.validValues=Valid filesystem path
cfdpProcessor.writable.config.file=/ammos/ampcs/services/cfdp/config/config.properties

cfdpProcessor.config.file.blockDescription=Properties to configure CFDP Processor configuration file

cfdpProcessor.config.file.init.action.result.timeout.millis.description=CFDP Processor writeable config file initialization value for: Maximum milliseconds the Action REST request controller should wait for results to be made available by the JavaCFDP engine before timing out and responding to the REST client.
cfdpProcessor.config.file.init.action.result.timeout.millis.validValues=Non-negative integer
cfdpProcessor.config.file.init.action.result.timeout.millis=5000

cfdpProcessor.config.file.init.action.ring.buffer.size.description=CFDP Processor writeable config file initialization value for: Size of ring buffer for queuing incoming Action REST requests.
cfdpProcessor.config.file.init.action.ring.buffer.size.validValues=1 to 2147483647
cfdpProcessor.config.file.init.action.ring.buffer.size=1024

cfdpProcessor.config.file.init.active.downlink.files.top.level.directory.description=CFDP Processor writeable config file initialization value for: Filesystem directory where active downlink files and metadata files should be written to when force generated.
cfdpProcessor.config.file.init.active.downlink.files.top.level.directory.validValues=Valid filesystem path
cfdpProcessor.config.file.init.active.downlink.files.top.level.directory=/ammos/ampcs/services/cfdp/active

cfdpProcessor.config.file.init.ampcs.product.plugin.enabled.description=CFDP Processor writeable config file initialization value for: Enable the AMPCS Product Plug-In
cfdpProcessor.config.file.init.ampcs.product.plugin.enabled.validValues=true|false
cfdpProcessor.config.file.init.ampcs.product.plugin.enabled=true

cfdpProcessor.config.file.init.auto.state.save.period.millis.description=CFDP Processor writeable config file initialization value for: Milliseconds between CFDP Processor's automatic state (checkpoint) saves to the filesystem.
cfdpProcessor.config.file.init.auto.state.save.period.millis.behavioralNotes=If 0, automatic saving of state is disabled.
cfdpProcessor.config.file.init.auto.state.save.period.millis.validValues=0 to 2147483647
cfdpProcessor.config.file.init.auto.state.save.period.millis=0

cfdpProcessor.config.file.init.consecutive.filestore.failures.before.declaring.error.threshold.description=CFDP Processor writeable config file initialization value for: Number of attempts threshold before declaring filesystem is not-functioning in CFDP Processor state.
cfdpProcessor.config.file.init.consecutive.filestore.failures.before.declaring.error.threshold.behavioralNotes=If 0, immediately declare a filestore failure as filesystem not-functioning.
cfdpProcessor.config.file.init.consecutive.filestore.failures.before.declaring.error.threshold.validValues=0 to 2147483647
cfdpProcessor.config.file.init.consecutive.filestore.failures.before.declaring.error.threshold=3

cfdpProcessor.config.file.init.default.service.class.description=CFDP Processor writeable config file initialization value for: Default CFDP service class to start new transactions with. 1 is Unacknowledged mode, 2 is Acknowledged mode.
cfdpProcessor.config.file.init.default.service.class.validValues=1 or 2
cfdpProcessor.config.file.init.default.service.class=2

cfdpProcessor.config.file.init.disable.config.autosave.description=CFDP Processor writeable config file initialization value for: Disable persisting of the writeable config file.
cfdpProcessor.config.file.init.disable.config.autosave.validValues=true|false
cfdpProcessor.config.file.init.disable.config.autosave=false

cfdpProcessor.config.file.init.disable.mib.autosave.description=CFDP Processor writeable config file initialization value for: Disable persisting of MIB file.
cfdpProcessor.config.file.init.disable.mib.autosave.validValues=true|false
cfdpProcessor.config.file.init.disable.mib.autosave=false

cfdpProcessor.config.file.init.downlink.metadata.include.pdu.log.enabled.description=CFDP Processor writeable config file initialization value for: Include verbose PDU log in downlink .md files.
cfdpProcessor.config.file.init.downlink.metadata.include.pdu.log.enabled.validValues=true|false
cfdpProcessor.config.file.init.downlink.metadata.include.pdu.log.enabled=true

cfdpProcessor.config.file.init.downlink.pdpp.enabled.description=CFDP Processor writeable config file initialization value for: Whether or not to add received products to the PDPP database
cfdpProcessor.config.file.init.downlink.pdpp.enabled.validValues=true|false
cfdpProcessor.config.file.init.downlink.pdpp.enabled=false

cfdpProcessor.config.file.init.engine.cycle.minimum.interval.when.idle.millis.description=CFDP Processor writeable config file initialization value for: How many milliseconds to sleep between cycles when CFDP Processor has no actions to take. Setting this to 0 will cause CPU to spin.
cfdpProcessor.config.file.init.engine.cycle.minimum.interval.when.idle.millis.validValues=0 to 9223372036854775807
cfdpProcessor.config.file.init.engine.cycle.minimum.interval.when.idle.millis=1000

cfdpProcessor.config.file.init.engine.cycler.task.executor.shutdown.timeout.millis.description=CFDP Processor writeable config file initialization value for: How many milliseconds to wait for CFDP Processor's main engine cycler to shut down before timeout.
cfdpProcessor.config.file.init.engine.cycler.task.executor.shutdown.timeout.millis.validValues=0 to 9223372036854775807
cfdpProcessor.config.file.init.engine.cycler.task.executor.shutdown.timeout.millis=5000


cfdpProcessor.config.file.init.eof.pdu.checksum.validation.enabled.description=CFDP Processor writeable config file initialization value for: whether or not to perform file checksum validation
cfdpProcessor.config.file.init.eof.pdu.checksum.validation.enabled.validValues=true|false
cfdpProcessor.config.file.init.eof.pdu.checksum.validation.enabled=true

cfdpProcessor.config.file.init.eof.pdu.checksum.algorithm.description=CFDP Processor writeable config file initialization value for: which checksum algorithm to use.
cfdpProcessor.config.file.init.eof.pdu.checksum.algorithm.validValues=CFDP|CRC32
cfdpProcessor.config.file.init.eof.pdu.checksum.algorithm=CFDP

cfdpProcessor.config.file.init.finished.downlink.files.top.level.directory.description=CFDP Processor writeable config file initialization value for: Filesystem directory where finished downlink files and metadata files should be written to when transaction finishes.
cfdpProcessor.config.file.init.finished.downlink.files.top.level.directory.validValues=Valid filesystem path
cfdpProcessor.config.file.init.finished.downlink.files.top.level.directory=/ammos/ampcs/services/cfdp/finished

cfdpProcessor.config.file.init.finished.transactions.history.keep.time.millis.description=CFDP Processor writeable config file initialization value for: How many milliseconds to keep finished transactions in memory before becoming eligible for purging.
cfdpProcessor.config.file.init.finished.transactions.history.keep.time.millis.validValues=0 to 9223372036854775807
cfdpProcessor.config.file.init.finished.transactions.history.keep.time.millis=120000

cfdpProcessor.config.file.init.finished.transactions.history.purge.period.millis.description=CFDP Processor writeable config file initialization value for: How many milliseconds to wait between finished transaction history purging activity.
cfdpProcessor.config.file.init.finished.transactions.history.purge.period.millis.validValues=0 to 9223372036854775807
cfdpProcessor.config.file.init.finished.transactions.history.purge.period.millis=10000

cfdpProcessor.config.file.init.inbound.pdu.file.ingestion.minimum.read.interval.millis.description=CFDP Processor writeable config file initialization value for: How many additional millisconds to delay between buffer reads of PDUs file from the filesystem. This is to slow down PDU ingestion artificially.
cfdpProcessor.config.file.init.inbound.pdu.file.ingestion.minimum.read.interval.millis.validValues=0 to 9223372036854775807
cfdpProcessor.config.file.init.inbound.pdu.file.ingestion.minimum.read.interval.millis=0

cfdpProcessor.config.file.init.inbound.pdu.ring.buffer.size.description=CFDP Processor writeable config file initialization value for: Size of the ring buffer to keep inbound PDUs.
cfdpProcessor.config.file.init.inbound.pdu.ring.buffer.size.validValues=0 to 2147483647
cfdpProcessor.config.file.init.inbound.pdu.ring.buffer.size=4096

cfdpProcessor.config.file.init.ingest.action.disruptor.ring.buffer.size.description=CFDP Processor writeable config file initialization value for: Size of the ring buffer specifically for the Ingest Action request.
cfdpProcessor.config.file.init.ingest.action.disruptor.ring.buffer.size.validValues=0 to 2147483647
cfdpProcessor.config.file.init.ingest.action.disruptor.ring.buffer.size=8

cfdpProcessor.config.file.init.ingest.action.disruptor.shutdown.timeout.millis.description=CFDP Processor writeable config file initialization value for: How many milliseconds to wait for Ingest Action ring buffer to shut down before timeout.
cfdpProcessor.config.file.init.ingest.action.disruptor.shutdown.timeout.millis.validValues=0 to 9223372036854775807
cfdpProcessor.config.file.init.ingest.action.disruptor.shutdown.timeout.millis=5000

cfdpProcessor.config.file.init.instance.id.description=CFDP Processor writeable config file initialization value for: CFDP Processor instance identifier string.
cfdpProcessor.config.file.init.instance.id.validValues=A character string to identify the CFDP Processor instance.
cfdpProcessor.config.file.init.instance.id=PRIME

cfdpProcessor.config.file.init.local.cfdp.entity.id.description=CFDP Processor writeable config file initialization value for: Local CFDP entity ID.
cfdpProcessor.config.file.init.local.cfdp.entity.id.validValues=0 to 18446744073709551615
cfdpProcessor.config.file.init.local.cfdp.entity.id=1

cfdpProcessor.config.file.init.maximum.destination.filename.length.description=CFDP Processor writeable config file initialization value for: Maximum number of characters allowed for the destination filename when CFDP Put Request is received.
cfdpProcessor.config.file.init.maximum.destination.filename.length.validValues=1 to 255
cfdpProcessor.config.file.init.maximum.destination.filename.length=255

cfdpProcessor.config.file.init.maximum.source.filename.length.description=CFDP Processor writeable config file initialization value for: Maximum number of characters allowed for the source filename when CFDP Put Request is received.
cfdpProcessor.config.file.init.maximum.source.filename.length.validValues=1 to 255
cfdpProcessor.config.file.init.maximum.source.filename.length=121

cfdpProcessor.config.file.init.maximum.open.uplink.transactions.per.remote.entity.description=CFDP Processor writeable config file initialization value for: Maximum number of open uplink transactions per remote entity.
cfdpProcessor.config.file.init.maximum.open.uplink.transactions.per.remote.entity.validValues=0 to 2147483647
cfdpProcessor.config.file.init.maximum.open.uplink.transactions.per.remote.entity=200

cfdpProcessor.config.file.init.maximum.uplink.file.size.bytes.description=CFDP Processor writeable config file initialization value for: Maximum file size to allow for uplink transactions.
cfdpProcessor.config.file.init.maximum.uplink.file.size.bytes.validValues=0 to 4294967295
cfdpProcessor.config.file.init.maximum.uplink.file.size.bytes=4294967295

cfdpProcessor.config.file.init.maximum.uplink.file.sizes.total.bytes.per.remote.entity.description=CFDP Processor writeable config file initialization value for: Maximum number of aggregate bytes of all files being uplinked to a single remote entity.
cfdpProcessor.config.file.init.maximum.uplink.file.sizes.total.bytes.per.remote.entity.validValues=Non-negative integer, can be bigger than 2^64 bytes
cfdpProcessor.config.file.init.maximum.uplink.file.sizes.total.bytes.per.remote.entity=4294967295

cfdpProcessor.config.file.init.message.disruptor.ring.buffer.size.description=CFDP Processor writeable config file initialization value for: Ring buffer size for messages to publish.
cfdpProcessor.config.file.init.message.disruptor.ring.buffer.size.validValues=1 to 2147483647
cfdpProcessor.config.file.init.message.disruptor.ring.buffer.size=4096

cfdpProcessor.config.file.init.message.disruptor.shutdown.timeout.millis.description=CFDP Processor writeable config file initialization value for: Maximum milliseconds to wait for publishable messages ring buffer to shut down.
cfdpProcessor.config.file.init.message.disruptor.shutdown.timeout.millis.validValues=0 to 9223372036854775807
cfdpProcessor.config.file.init.message.disruptor.shutdown.timeout.millis=5000

cfdpProcessor.config.file.init.message.service.inbound.pdu.handler.queue.size.description=CFDP Processor writeable config file initialization value for: Size for the incoming CfdpPduMessages queue.
cfdpProcessor.config.file.init.message.service.inbound.pdu.handler.queue.size.validValues=0 to 2147483647
cfdpProcessor.config.file.init.message.service.inbound.pdu.handler.queue.size=1024

cfdpProcessor.config.file.init.message.service.inbound.pdu.root.topics.override.description=CFDP Processor writeable config file initialization value for: List of root topics CFDP Processor should subscribe to (with .pdu) appended for CfdpPduMessages.
cfdpProcessor.config.file.init.message.service.inbound.pdu.root.topics.override.validValues=<string>[,<string>[...]]
cfdpProcessor.config.file.init.message.service.inbound.pdu.root.topics.override.behavioralNotes=If not empty, CFDP Processor will subscribe to the listed root topics plus ".pdu" extension instead of the default topic.
cfdpProcessor.config.file.init.message.service.inbound.pdu.root.topics.override=

cfdpProcessor.config.file.init.message.service.publishing.root.topic.override.description=CFDP Processor writeable config file initialization value for: Root topic override to which the CFDP Processor should publish messages.
cfdpProcessor.config.file.init.message.service.publishing.root.topic.override.validValues=<string>
cfdpProcessor.config.file.init.message.service.publishing.root.topic.override.behavioralNotes=If not empty string, CFDP Processor will publish to the specified root topic plus ".cfdp" extension instead of using the default topic.
cfdpProcessor.config.file.init.message.service.publishing.root.topic.override=

cfdpProcessor.config.file.init.message.service.pdu.message.publishing.enabled.description=CFDP Processor writeable config file initialization value for: Enable message service publishing of individual PDUs.
cfdpProcessor.config.file.init.message.service.pdu.message.publishing.enabled.validValues=true|false
cfdpProcessor.config.file.init.message.service.pdu.message.publishing.enabled=false

cfdpProcessor.config.file.init.message.service.progress.cfdp.indication.message.publishing.enabled.description=CFDP Processor writeable config file initialization value for: Enable message service publishing of progress CFDP Indications.
cfdpProcessor.config.file.init.message.service.progress.cfdp.indication.message.publishing.enabled.validValues=true|false
cfdpProcessor.config.file.init.message.service.progress.cfdp.indication.message.publishing.enabled=false

cfdpProcessor.config.file.init.outbound.pdu.enabled.description=CFDP Processor writeable config file initialization value for: Enable sending of outbound PDUs.
cfdpProcessor.config.file.init.outbound.pdu.enabled.validValues=true|false
cfdpProcessor.config.file.init.outbound.pdu.enabled=true

cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.directory.description=CFDP Processor writeable config file initialization value for: Directory in the filesystem where PDUs should be written to if 'filesystem' is the outbound PDU sink type.
cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.directory.validValues=Valid filesystem path
cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.directory=/ammos/ampcs/services/cfdp/pdusink

cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.file.extension.description=CFDP Processor writeable config file initialization value for: File extension to append to outbound PDU files being written.
cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.file.extension.validValues=Valid file name extension string
cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.file.extension=.pdu

cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.file.number.width.description=CFDP Processor writeable config file initialization value for: Number of digits to use when naming the outbound PDUs being written to the filesystem, for indicating PDU's sequence.
cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.file.number.width.validValues=Positive integer (maximum is system-dependent)
cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.file.number.width=8

cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.file.prefix.description=CFDP Processor writeable config file initialization value for: Prefix string to prepend to outbound PDUs being written to the filesystem, for easier identification.
cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.file.prefix.validValues=Valid file name string
cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.file.prefix=cfdp_out_

cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.minimum.write.interval.millis.description=CFDP Processor writeable config file initialization value for: Additional delay to introduce, in milliseconds, between outbound PDU writes to the filesystem.
cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.minimum.write.interval.millis.validValues=0 to 9223372036854775807
cfdpProcessor.config.file.init.outbound.pdu.filesystem.sink.minimum.write.interval.millis=0

cfdpProcessor.config.file.init.outbound.pdu.sink.type.description=CFDP Processor writeable config file initialization value for: Whether to send outbound PDUs to a REST API endpoint (Auto Proxy, LinkSim) or save PDUs to files.
cfdpProcessor.config.file.init.outbound.pdu.sink.type.validValues=Enumeration: 'uri' or 'filesystem'
cfdpProcessor.config.file.init.outbound.pdu.sink.type=uri

cfdpProcessor.config.file.init.outbound.pdu.uri.description=CFDP Processor writeable config file initialization value for: REST API endpoint to send the outbound PDUs to (Auto Proxy, LinkSim).
cfdpProcessor.config.file.init.outbound.pdu.uri.validValues=Valid HTTP or HTTPS address where REST API endpoint exists
cfdpProcessor.config.file.init.outbound.pdu.uri=https\://localhost.jpl.nasa.gov\:8384/auto/send_pdu

cfdpProcessor.config.file.init.outbound.pdu.uri.sink.minimum.send.interval.millis.description=CFDP Processor writeable config file initialization value for: Introduce additional delay (in milliseconds) between sending outbound PDUs to the REST API endpoint.
cfdpProcessor.config.file.init.outbound.pdu.uri.sink.minimum.send.interval.millis.validValues=Non-negative integer
cfdpProcessor.config.file.init.outbound.pdu.uri.sink.minimum.send.interval.millis=0

cfdpProcessor.config.file.init.pdu.file.read.buffer.size.bytes.description=CFDP Processor writeable config file initialization value for: Buffer size to use when ingesting PDUs from filesystem.
cfdpProcessor.config.file.init.pdu.file.read.buffer.size.bytes.validValues=1 to 2147483647
cfdpProcessor.config.file.init.pdu.file.read.buffer.size.bytes=65536

cfdpProcessor.config.file.init.port.description=CFDP Processor writeable config file initialization value for: Port number the CFDP Processor should use.
cfdpProcessor.config.file.init.port.validValues=Valid system port number
cfdpProcessor.config.file.init.port=8080

cfdpProcessor.config.file.init.saved.state.directory.description=CFDP Processor writeable config file initialization value for: Directory to save state files.
cfdpProcessor.config.file.init.saved.state.directory.validValues=Valid path in the file system
cfdpProcessor.config.file.init.saved.state.directory=/ammos/ampcs/services/cfdp/config/savedstate

cfdpProcessor.config.file.init.temporary.files.directory.description=CFDP Processor writeable config file initialization value for: Directory to save temporary downlink files.
cfdpProcessor.config.file.init.temporary.files.directory.validValues=Valid path in the file system
cfdpProcessor.config.file.init.temporary.files.directory=/ammos/ampcs/services/cfdp/config/savedstate/tempfiles

cfdpProcessor.config.file.init.transaction.sequence.number.file.description=CFDP Processor writeable config file initialization value for: File to save last used transaction sequence number.
cfdpProcessor.config.file.init.transaction.sequence.number.file.validValues=Valid path in the file system
cfdpProcessor.config.file.init.transaction.sequence.number.file=/ammos/ampcs/services/cfdp/config/tx-seq-num.txt

cfdpProcessor.config.file.init.unknown.destination.filename.downlink.files.subdirectory.description=CFDP Processor writeable config file initialization value for: Subdirectory name for those downlink files whose filename cannot be determined due to missing Metadata PDU.
cfdpProcessor.config.file.init.unknown.destination.filename.downlink.files.subdirectory.validValues=Valid directory string
cfdpProcessor.config.file.init.unknown.destination.filename.downlink.files.subdirectory=FILENAME_UNKNOWN

cfdpProcessor.config.file.init.uplink.files.top.level.directory.description=CFDP Processor writeable config file initialization value for: Directory where files to uplink are located.
cfdpProcessor.config.file.init.uplink.files.top.level.directory.validValues=Valid path in the file system
cfdpProcessor.config.file.init.uplink.files.top.level.directory=/ammos/ampcs/services/cfdp/uplink


cfdpProcessor.config.file.init.uplink.files.available.query.description=CFDP Processor writeable config file initialization value for: whether or not querying for available files is enabled
cfdpProcessor.config.file.init.uplink.files.available.query.validValues=true|false
cfdpProcessor.config.file.init.uplink.files.available.query.enabled=true

cfdpProcessor.config.file.init.uplink.metadata.include.pdu.log.enabled.description=CFDP Processor writeable config file initialization value for: Include verbose PDU log in uplink .md files.
cfdpProcessor.config.file.init.uplink.metadata.include.pdu.log.enabled.validValues=true|false
cfdpProcessor.config.file.init.uplink.metadata.include.pdu.log.enabled=true

cfdpProcessor.config.file.init.worker.tasks.executor.shutdown.timeout.millis.description=CFDP Processor writeable config file initialization value for: Milliseconds to wait for CFDP Processor's worker tasks to shut down before timeout.
cfdpProcessor.config.file.init.worker.tasks.executor.shutdown.timeout.millis.validValues=0 to 9223372036854775807
cfdpProcessor.config.file.init.worker.tasks.executor.shutdown.timeout.millis=5000

cfdpProcessor.config.file.init.writable.mib.file.description=CFDP Processor writeable config file initialization value for: MIB file path.
cfdpProcessor.config.file.init.writable.mib.file.validValues=Valid path to the MIB file in the file system
cfdpProcessor.config.file.init.writable.mib.file=/ammos/ampcs/services/cfdp/config/mib.properties

cfdpProcessor.config.file.init.inbound.pdu.from.linksim.description=CFDP Processor writeable config file initialization value for: If "true", only consumes CfdpPduMessages published by LinkSim. If "false", only consumes CfdpPduMessages published by chill_down.
cfdpProcessor.config.file.init.inbound.pdu.from.linksim.validValues=true|false
cfdpProcessor.config.file.init.inbound.pdu.from.linksim=false

cfdpProcessor.config.file.init.mtu.map.file.description=CFDP Processor writeable config file initialization value for: Messages to User map file.
cfdpProcessor.config.file.init.mtu.map.file.validValues=Valid path to the Messages to User map file in the file system
cfdpProcessor.config.file.init.mtu.map.file=/ammos/ampcs/services/cfdp/config/mtumap.properties

cfdpProcessor.config.file.init.mtu.direct.input.enabled.description=CFDP Processor writeable config file initialization value for: Allow direct Message to User input.
cfdpProcessor.config.file.init.mtu.direct.input.enabled.validValues=true|false
cfdpProcessor.config.file.init.mtu.direct.input.enabled.behavioralNotes=If "true", the user can supply arbitrary array of bytes to send as Message to User when starting a transaction. If "false", the CFDP Processor will reject such attempts.
cfdpProcessor.config.file.init.mtu.direct.input.enabled=true

cfdpProcessor.config.file.init.mtu.always.required.description=CFDP Processor writeable config file initialization value for: At least one Message to User is always required.
cfdpProcessor.config.file.init.mtu.always.required.validValues=true|false
cfdpProcessor.config.file.init.mtu.always.required.behavioralNotes=If "true", CFDP Processor will not start a transaction if no Message to User was provided. If "false", no such checking is done.
cfdpProcessor.config.file.init.mtu.always.required=false

cfdpProcessor.mib.blockDescription=Properties to configure CFDP Processor MIB

cfdpProcessor.mib.file.init.local.cycle.mode.description=CFDP Processor MIB file initialization value for: CFDP engine cycle mode. DIR_THEN_DATA, DIR_NAKKED_OTHER, and SERIAL_UPLINK are the options.
cfdpProcessor.mib.file.init.local.cycle.mode.behavioralNotes=If 'DIR_THEN_DATA': CFDP Processor will cycle all active transactions in the order they were created; on the first pass, allow each transaction to send a file directive; then make a second pass where senders can send a file data PDU. If 'DIR_NAKKED_OTHER': Cycle transactions giving preference to NAKed data. On the first pass, allow each transaction to send a file directive. Then make the file data pass in 2 parts: first, NAKed senders, then other senders. If 'SERIAL_UPLINK': Cycle all active transactions in the order they were created. On the first pass, allow each transaction to send a file directive. On the file data pass, only allow a single non-NAKed sender and any NAKed senders to send file data. The allowed non-NAKed sender corresponds to the oldest transaction.
cfdpProcessor.mib.file.init.local.cycle.mode.validValues=Enumeration: 'DIR_THEN_DATA','DIR_NAKKED_OTHER','SERIAL_UPLINK'
cfdpProcessor.mib.file.init.local.cycle.mode=DIR_THEN_DATA

cfdpProcessor.mib.file.init.local.default.handler.for.cancel.request.received.description=CFDP Processor MIB file initialization value for: What to do when Cancel Request is received from user
cfdpProcessor.mib.file.init.local.default.handler.for.cancel.request.received.validValues=Enumeration: RESPONSE_CANCEL, RESPONSE_SUSPEND, RESPONSE_IGNORE, RESPONSE_ABANDON
cfdpProcessor.mib.file.init.local.default.handler.for.cancel.request.received=RESPONSE_CANCEL

cfdpProcessor.mib.file.init.local.default.handler.for.file.checksum.failure.description=CFDP Processor MIB file initialization value for: What to do when downlink file's file checksum fails.
cfdpProcessor.mib.file.init.local.default.handler.for.file.checksum.failure.validValues=Enumeration: RESPONSE_CANCEL, RESPONSE_SUSPEND, RESPONSE_IGNORE, RESPONSE_ABANDON
cfdpProcessor.mib.file.init.local.default.handler.for.file.checksum.failure=RESPONSE_CANCEL

cfdpProcessor.mib.file.init.local.default.handler.for.file.size.error.description=CFDP Processor MIB file initialization value for: What to do when file size doesn't match between expected and actual.
cfdpProcessor.mib.file.init.local.default.handler.for.file.size.error.validValues=Enumeration: RESPONSE_CANCEL, RESPONSE_SUSPEND, RESPONSE_IGNORE, RESPONSE_ABANDON
cfdpProcessor.mib.file.init.local.default.handler.for.file.size.error=RESPONSE_CANCEL

cfdpProcessor.mib.file.init.local.default.handler.for.filestore.rejection.description=CFDP Processor MIB file initialization value for: What to do when filestore error occurs.
cfdpProcessor.mib.file.init.local.default.handler.for.filestore.rejection.validValues=Enumeration: RESPONSE_CANCEL, RESPONSE_SUSPEND, RESPONSE_IGNORE, RESPONSE_ABANDON
cfdpProcessor.mib.file.init.local.default.handler.for.filestore.rejection=RESPONSE_CANCEL

cfdpProcessor.mib.file.init.local.default.handler.for.inactivity.detected.description=CFDP Processor MIB file initialization value for: What to do when transaction inactivity timer expires.
cfdpProcessor.mib.file.init.local.default.handler.for.inactivity.detected.validValues=Enumeration: RESPONSE_CANCEL, RESPONSE_SUSPEND, RESPONSE_IGNORE, RESPONSE_ABANDON
cfdpProcessor.mib.file.init.local.default.handler.for.inactivity.detected=RESPONSE_CANCEL

cfdpProcessor.mib.file.init.local.default.handler.for.invalid.file.structure.description=CFDP Processor MIB file initialization value for: What to do when invalid file structure is found, i.e. file is segmented when it shouldn't be, and vice versa.
cfdpProcessor.mib.file.init.local.default.handler.for.invalid.file.structure.validValues=Enumeration: RESPONSE_CANCEL, RESPONSE_SUSPEND, RESPONSE_IGNORE, RESPONSE_ABANDON
cfdpProcessor.mib.file.init.local.default.handler.for.invalid.file.structure=RESPONSE_CANCEL

cfdpProcessor.mib.file.init.local.default.handler.for.invalid.transmission.mode.description=CFDP Processor MIB file initialization value for: What to do when invalid transmission mode is detected. Note: GSFC JavaCFDP engine takes no action based on this condition code.
cfdpProcessor.mib.file.init.local.default.handler.for.invalid.transmission.mode.validValues=Enumeration: RESPONSE_CANCEL, RESPONSE_SUSPEND, RESPONSE_IGNORE, RESPONSE_ABANDON
cfdpProcessor.mib.file.init.local.default.handler.for.invalid.transmission.mode=RESPONSE_CANCEL

cfdpProcessor.mib.file.init.local.default.handler.for.keep.alive.limit.reached.description=CFDP Processor MIB file initialization value for: What to do when keep alive limit is reached.
cfdpProcessor.mib.file.init.local.default.handler.for.keep.alive.limit.reached.validValues=Enumeration: RESPONSE_CANCEL, RESPONSE_SUSPEND, RESPONSE_IGNORE, RESPONSE_ABANDON
cfdpProcessor.mib.file.init.local.default.handler.for.keep.alive.limit.reached=RESPONSE_CANCEL

cfdpProcessor.mib.file.init.local.default.handler.for.nak.limit.reached.description=CFDP Processor MIB file initialization value for: What to do when NAK limit is reached.
cfdpProcessor.mib.file.init.local.default.handler.for.nak.limit.reached.validValues=Enumeration: RESPONSE_CANCEL, RESPONSE_SUSPEND, RESPONSE_IGNORE, RESPONSE_ABANDON
cfdpProcessor.mib.file.init.local.default.handler.for.nak.limit.reached=RESPONSE_CANCEL

cfdpProcessor.mib.file.init.local.default.handler.for.no.error.description=CFDP Processor MIB file initialization value for: What to do when there are no errors (i.e. everything's nominal).
cfdpProcessor.mib.file.init.local.default.handler.for.no.error.validValues=Enumeration: RESPONSE_CANCEL, RESPONSE_SUSPEND, RESPONSE_IGNORE, RESPONSE_ABANDON
cfdpProcessor.mib.file.init.local.default.handler.for.no.error=RESPONSE_CANCEL

cfdpProcessor.mib.file.init.local.default.handler.for.positive.ack.limit.reached.description=CFDP Processor MIB file initialization value for: What to do when positive ACK limit is reached.
cfdpProcessor.mib.file.init.local.default.handler.for.positive.ack.limit.reached.validValues=Enumeration: RESPONSE_CANCEL, RESPONSE_SUSPEND, RESPONSE_IGNORE, RESPONSE_ABANDON
cfdpProcessor.mib.file.init.local.default.handler.for.positive.ack.limit.reached=RESPONSE_CANCEL

cfdpProcessor.mib.file.init.local.default.handler.for.suspend.request.received.description=CFDP Processor MIB file initialization value for: What to do when Suspend request is received.
cfdpProcessor.mib.file.init.local.default.handler.for.suspend.request.received.validValues=Enumeration: RESPONSE_CANCEL, RESPONSE_SUSPEND, RESPONSE_IGNORE, RESPONSE_ABANDON
cfdpProcessor.mib.file.init.local.default.handler.for.suspend.request.received=RESPONSE_CANCEL

cfdpProcessor.mib.file.init.local.eof.recv.indication.description=CFDP Processor MIB file initialization value for: Whether to enable indication callback on EOF reception.
cfdpProcessor.mib.file.init.local.eof.recv.indication.validValues=true|false
cfdpProcessor.mib.file.init.local.eof.recv.indication=true

cfdpProcessor.mib.file.init.local.eof.sent.indication.description=CFDP Processor MIB file initialization value for: Whether to enable indication callback on EOF send.
cfdpProcessor.mib.file.init.local.eof.sent.indication.validValues=true|false
cfdpProcessor.mib.file.init.local.eof.sent.indication=true

cfdpProcessor.mib.file.init.local.file.segment.recv.indication.description=CFDP Processor MIB file initialization value for: Whether to enable indication callback on file segment reception.
cfdpProcessor.mib.file.init.local.file.segment.recv.indication.validValues=true|false
cfdpProcessor.mib.file.init.local.file.segment.recv.indication=false

cfdpProcessor.mib.file.init.local.file.segment.sent.indication.description=CFDP Processor MIB file initialization value for: Whether to enable indication callback on file segment send.
cfdpProcessor.mib.file.init.local.file.segment.sent.indication.validValues=true|false
cfdpProcessor.mib.file.init.local.file.segment.sent.indication=false

cfdpProcessor.mib.file.init.local.freeze.timers.on.new.class.1.transactions.description=CFDP Processor MIB file initialization value for: Whether to freeze timers upon starting a new Class 1 transaction.
cfdpProcessor.mib.file.init.local.freeze.timers.on.new.class.1.transactions.validValues=true|false
cfdpProcessor.mib.file.init.local.freeze.timers.on.new.class.1.transactions=false

cfdpProcessor.mib.file.init.local.freeze.timers.on.new.class.2.transactions.description=CFDP Processor MIB file initialization value for: Whether to freeze timers upon starting a new Class 2 transaction.
cfdpProcessor.mib.file.init.local.freeze.timers.on.new.class.2.transactions.validValues=true|false
cfdpProcessor.mib.file.init.local.freeze.timers.on.new.class.2.transactions=false

cfdpProcessor.mib.file.init.local.maximum.concurrent.transactions.description=CFDP Processor MIB file initialization value for: Maximum number of concurrent transactions allowed by the local entity.
cfdpProcessor.mib.file.init.local.maximum.concurrent.transactions.validValues=1 to 2147483647
cfdpProcessor.mib.file.init.local.maximum.concurrent.transactions=2464

cfdpProcessor.mib.file.init.local.maximum.file.data.per.incoming.pdu.bytes.description=CFDP Processor MIB file initialization value for: Maximum number of file data bytes allowed per incoming PDU.
cfdpProcessor.mib.file.init.local.maximum.file.data.per.incoming.pdu.bytes.validValues=1 to 65535
cfdpProcessor.mib.file.init.local.maximum.file.data.per.incoming.pdu.bytes=65535

cfdpProcessor.mib.file.init.local.maximum.gaps.per.nak.pdu.description=CFDP Processor MIB file initialization value for: Limit the size of NAK PDUs by limiting the maximum gaps that can be put into a single NAK PDU. Setting this value to <n> will result in NAK PDU of size (bytes): 13 + (<n> * 8) + (<entity ID length> * 2) + <transaction sequence number length> + <CRC length>. Example A: maximum.gaps.per.nak.pdu=1, entity ID length = 1, TSN length = 2, and no CRC = 25 bytes. Example B: maximum.gaps.per.nak.pdu=50, entity ID length = 1, TSN length = 2, and no CRC = 417 bytes.
cfdpProcessor.mib.file.init.local.maximum.gaps.per.nak.pdu.validValues=Positive integer
cfdpProcessor.mib.file.init.local.maximum.gaps.per.nak.pdu=50

cfdpProcessor.mib.file.init.local.maximum.incoming.metadata.pdu.filename.length.description=CFDP Processor MIB file initialization value for: Maximum number of characters allowed in the filename field when Metadata PDU is received.
cfdpProcessor.mib.file.init.local.maximum.incoming.metadata.pdu.filename.length.behavioralNotes=0 is equivalent to 'no limit'
cfdpProcessor.mib.file.init.local.maximum.incoming.metadata.pdu.filename.length.validValues=0 to 255
cfdpProcessor.mib.file.init.local.maximum.incoming.metadata.pdu.filename.length=255

cfdpProcessor.mib.file.init.local.report.unknown.transactions.description=CFDP Processor MIB file initialization value for: Whether to allow reporting of requests for unknown transactions.
cfdpProcessor.mib.file.init.local.report.unknown.transactions.validValues=true|false
cfdpProcessor.mib.file.init.local.report.unknown.transactions=true

cfdpProcessor.mib.file.init.local.transaction.sequence.number.length.description=CFDP Processor MIB file initialization value for: Maximum number of bytes the CFDP Processor should use for the transaction sequence number field in the CFDP PDUs
cfdpProcessor.mib.file.init.local.transaction.sequence.number.length.behavioralNotes=Values 1 to 8 indicate maximum bytes to use. Value 0 indicates 'use any length'. (So 0 acts like 8.)
cfdpProcessor.mib.file.init.local.transaction.sequence.number.length.validValues=Integer 0 to 8
cfdpProcessor.mib.file.init.local.transaction.sequence.number.length=0

cfdpProcessor.mib.file.init.remote.add.pdu.crc.description=CFDP Processor MIB file initialization value for: Whether to add CRC to outgoing PDUs or not.
cfdpProcessor.mib.file.init.remote.add.pdu.crc.behavioralNotes=If 'true', CRC will be added to PDUs
cfdpProcessor.mib.file.init.remote.add.pdu.crc.validValues=true|false
cfdpProcessor.mib.file.init.remote.add.pdu.crc=true

cfdpProcessor.mib.file.init.remote.check.pdu.crc.description=CFDP Processor MIB file initialization value for: Whether or not to check each incoming PDU's CRC.
cfdpProcessor.mib.file.init.remote.check.pdu.crc.behavioralNotes=This property is currently not supported (pending completion of MPCS-9788). Value will be ignored.
cfdpProcessor.mib.file.init.remote.check.pdu.crc.validValues=true|false
cfdpProcessor.mib.file.init.remote.check.pdu.crc=false

cfdpProcessor.mib.file.init.remote.maximum.file.data.per.outgoing.pdu.bytes.description=CFDP Processor MIB file initialization value for: Maximum number of bytes allowed to be included in an outgoing File Data PDU.
cfdpProcessor.mib.file.init.remote.maximum.file.data.per.outgoing.pdu.bytes.validValues=1 to 65535
cfdpProcessor.mib.file.init.remote.maximum.file.data.per.outgoing.pdu.bytes=1000

cfdpProcessor.mib.file.init.remote.nak.timeout.interval.seconds.description=CFDP Processor MIB file initialization value for: Number of seconds to wait for NAK to time out.
cfdpProcessor.mib.file.init.remote.nak.timeout.interval.seconds.validValues=0 to 2147483647
cfdpProcessor.mib.file.init.remote.nak.timeout.interval.seconds=15

cfdpProcessor.mib.file.init.remote.nak.timer.expiration.limit.description=CFDP Processor MIB file initialization value for: Number of NAK timeouts allowed before fault.
cfdpProcessor.mib.file.init.remote.nak.timer.expiration.limit.validValues=0 to 2147483647
cfdpProcessor.mib.file.init.remote.nak.timer.expiration.limit=3

cfdpProcessor.mib.file.init.remote.one-way.light.time.seconds.description=CFDP Processor MIB file initialization value for: One-way light time in seconds for remote entity.
cfdpProcessor.mib.file.init.remote.one-way.light.time.seconds.validValues=0 to 2147483647 
cfdpProcessor.mib.file.init.remote.one-way.light.time.seconds=0

cfdpProcessor.mib.file.init.remote.positive.ack.timeout.interval.seconds.description=CFDP Processor MIB file initialization value for: Number of seconds to wait for Positive ACK to time out.
cfdpProcessor.mib.file.init.remote.positive.ack.timeout.interval.seconds.validValues=0 to 2147483647
cfdpProcessor.mib.file.init.remote.positive.ack.timeout.interval.seconds=15

cfdpProcessor.mib.file.init.remote.positive.ack.timer.expiration.limit.description=CFDP Processor MIB file initialization value for: Number of Positive ACK timeouts allowed before fault.
cfdpProcessor.mib.file.init.remote.positive.ack.timer.expiration.limit.validValues=0 to 2147483647
cfdpProcessor.mib.file.init.remote.positive.ack.timer.expiration.limit=3

cfdpProcessor.mib.file.init.remote.require.acknowledgment.description=CFDP Processor MIB file initialization value for: This is a parameter that GSFC's JavaCFDP engine checks to see if new transactions should be created as acknowledged mode (Class 2) or not. Only 'true' is supported for this MIB property at this time, but CFDP Processor provides an alternate way to configure this setting: cfdp.processor.default.service.class.
cfdpProcessor.mib.file.init.remote.require.acknowledgment.validValues='true'
cfdpProcessor.mib.file.init.remote.require.acknowledgment=true

cfdpProcessor.mib.file.init.remote.save.incomplete.files.description=CFDP Processor MIB file initialization value for: Enable saving of incomplete downlink files.
cfdpProcessor.mib.file.init.remote.save.incomplete.files.validValues=true|false
cfdpProcessor.mib.file.init.remote.save.incomplete.files=true

cfdpProcessor.mib.file.init.remote.timers.enabled.description=CFDP Processor MIB file initialization value for: Enable timers for remote entity.
cfdpProcessor.mib.file.init.remote.timers.enabled.validValues=true|false
cfdpProcessor.mib.file.init.remote.timers.enabled=true

cfdpProcessor.mib.file.init.remote.total.round-trip.allowance.for.queuing.delay.seconds.description=CFDP Processor MIB file initialization value for: Additional allowance to allow for queuing delay, in seconds.
cfdpProcessor.mib.file.init.remote.total.round-trip.allowance.for.queuing.delay.seconds.validValues=0 to 2147483647
cfdpProcessor.mib.file.init.remote.total.round-trip.allowance.for.queuing.delay.seconds=0

cfdpProcessor.mib.file.init.remote.transaction.inactivity.timeout.seconds.description=CFDP Processor MIB file initialization value for: Number of seconds to wait for transaction inactivity to time out.
cfdpProcessor.mib.file.init.remote.transaction.inactivity.timeout.seconds.validValues=0 to 2147483647
cfdpProcessor.mib.file.init.remote.transaction.inactivity.timeout.seconds=180