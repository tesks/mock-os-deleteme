
# AMMOS Mission Data Processing and Control System (AMPCS)
# Creation Date: 2/2015
#
# Copyright (c) 2015. California Institute of Technology.
# ALL RIGHTS RESERVED.
# U.S. Government sponsorship acknowledged.
#
# This software is subject to U. S. export control laws and
# regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
# extent that the software is subject to U.S. export control laws
# and regulations, the recipient has the responsibility to obtain
# export licenses or other export authority as may be required
# before exporting such information to foreign countries or
# providing access to foreign nationals.
#
# This is the AMPCS properties file for the Global LAD feature set.
#
# This file is loaded using the standard AMPCS configuration file search
# mechanism, which typically looks first at the AMPCS system configuration 
# level, then at the project/mission configuration level, then at the user 
# configuration level. All properties files that are found will be loaded 
# in this order, with any configuration properties specified in later files 
# overriding those found in earlier files. It is not necessary to override
# all properties at the project or user level. If properties are omitted
# at any level, the property values loaded at the previous level remain in
# effect.
#
# Properties and their corresponding values must be included on a single line.
#

globallad.categoryDescription=Global LAD properties are used to configure the behavior of the Global LAD service, which stores and \
services up the latest received channel samples and EVRs.

globallad.enabled.description=Enables or disables the Global LAD.
globallad.enabled.behavioralNotes=If this is enabled chill_down and any processes extracting recorded telemetry \
will expect to be able to connect to the server and will fatal if they can not. If not enabled, chill_monitor displays will not be pre-populated.
globallad.enabled.validValues=true | false
globallad.enabled=false

globallad.debug.description=In debug mode all Global LAD REST request and responses will be logged.
globallad.debug.validValues=true | false
globallad.debug=false

globallad.rest.blockDescription=REST configuration properties for Global LAD queries and control interface.

globallad.rest.timetypes.enable.description=Enables or disables time types for Global LAD REST queries.
globallad.rest.timetypes.enable.validValues=true | false

globallad.rest.timetypes.enable.event.description=Allows or disallows Global LAD event time queries.
globallad.rest.timetypes.enable.event.behavioralNotes=Event time is defined as the time the \
Global LAD date object was created within the Global LAD downlink service.
globallad.rest.timetypes.enable.event.validValues=true | false
globallad.rest.timetypes.enable.event=true

globallad.rest.timetypes.enable.ert.description=Allows or disallows Global LAD ERT queries.
globallad.rest.timetypes.enable.ert.validValues=true | false
globallad.rest.timetypes.enable.ert=true

globallad.rest.timetypes.enable.scet.description=Allows or disallows Global LAD SCET queries.
globallad.rest.timetypes.enable.scet.validValues=true | false
globallad.rest.timetypes.enable.scet=true

globallad.rest.timetypes.enable.sclk.description=Allows or disallows Global LAD SCLK queries. 
globallad.rest.timetypes.enable.sclk.behavioralNotes=SCLK queries require a valid sclk-scet file to \
be available because the SCLK time will be converted to SCET.
globallad.rest.timetypes.enable.sclk.validValues=true | false
globallad.rest.timetypes.enable.sclk=true

globallad.rest.timetypes.enable.lst.description=Allows or disallows Global LAD LST queries.
globallad.rest.timetypes.enable.lst.behavioralNotes=LST queries require a valid sclk-scet file to \
be available because the LST time will be converted to SCET.
globallad.rest.timetypes.enable.lst.validValues=true | false
globallad.rest.timetypes.enable.lst=false

globallad.rest.timetypes.enable.all.description=Allows or disallows Global LAD queries with the ALL time type.
globallad.rest.timetypes.enable.all.behavioralNotes=When querying by time type 'all,' the Global LAD will \
union all the internal buffers to ensure that every value in the given range is returned.  This is \
important because it is possible that different user data types have been configured to not store \
values for a certain time type.  An example would be header channels, which have no SCET times. \
The results will be sorted by the set primary Global LAD time type.
globallad.rest.timetypes.enable.all.validValues=true | false
globallad.rest.timetypes.enable.all=true

globallad.rest.uri.description=The base uri to use when starting up the Global LAD REST server. This will be the root of all REST URIs.
globallad.rest.uri.formatHint=http://%s:%d/globallad/
globallad.rest.uri.behavioralNotes=The configuration will get the host and port and use Java String.format to \
replace the values in this field.
globallad.rest.uri=http://%s:%d/globallad/

globallad.rest.port.description=The port that the HTTP server will listen to for incoming Global LAD REST requests.
globallad.rest.port.validValues=0 to 65535
globallad.rest.port=8887

globallad.containers.blockDescription=Configuration properties that dictate how the Global LAD manages data containers for various \
types of data. This includes which time types are supported by the various containers, and how many items are kept by each container \
type (LAD depth).
globallad.containers.timeTypes.skip.description=Comma-separated list of the user data types that should not store the given time type.
globallad.containers.timeTypes.skip.formatHint=CSV of the user data types (bytes).

globallad.containers.timeTypes.skip.scet.description=Comma-separated list of the user data types that should not store data based on SCET.   
globallad.containers.timeTypes.skip.scet.behavioralNotes=SCET times do not relate to frame header, monitor or sse data. 
globallad.containers.timeTypes.skip.scet.validValues=0 to 7
(FSW Channel Value Real Time), 1 (FSW Channel Value Recorded), 2 (Header Channel Value), 3 (Monitor Channel Value), \
4 (SSE Channel Value), 5 (FSW EVR Real Time), 6 (FSW EVR Recorded), 7 (SSE Evr Real time). Greater depth means the Global LAD will use more memory.

globallad.containers.timeTypes.skip.scet=2,3,4,7

globallad.containers.timeTypes.skip.ert.description=Comma-separated list of the user data types that should not store data based on ERT.   
globallad.containers.timeTypes.skip.ert.behavioralNotes=By default all data types are stored in ERT buffers.
globallad.containers.timeTypes.skip.ert.validValues=0 to 7
globallad.containers.timeTypes.skip.ert=

globallad.containers.timeTypes.skip.event.description=Comma-separated list of the user data types that should not store data based on EVENT TIME.   
globallad.containers.timeTypes.skip.event.behavioralNotes=By default all data types are stored in event time buffers.
globallad.containers.timeTypes.skip.event.validValues=0 to 7
globallad.containers.timeTypes.skip.event=

globallad.containers.depth.default.description=Defines the default depth of the Global LAD data buffers. This is the number of instances that will be kept for an individual telemetry channel or EVR level.
globallad.containers.depth.default.behavioralNotes=Unless explicitly overridden by a more specific configuration value, the default is used for all user data types. Greater depth means the Global LAD will use more memory.
globallad.containers.depth.default=100

globallad.containers.depth.[GLAD_DATA_TYPE].description=Defines the data depth of the Global LAD data buffer for the specified user data type.
globallad.containers.depth.[GLAD_DATA_TYPE].behavioralNotes=User data types that can be used as the last element of property name are \
0 (FSW Channel Value Real Time), 1 (FSW Channel Value Recorded), 2 (Header Channel Value), 3 (Monitor Channel Value), \
4 (SSE Channel Value), 5 (FSW EVR Real Time), 6 (FSW EVR Recorded), 7 (SSE Evr Real time). Greater depth means the Global LAD will use more memory.
globallad.containers.depth.[GLAD_DATA_TYPE].depth.validValues=1 to 50000

globallad.containers.depth.5.description=Data depth of the Global LAD data buffer for Realtime EVR data.
globallad.containers.depth.5=10000

globallad.containers.depth.6.description=Data depth of the Global LAD data buffer for Recorded EVR data.
globallad.containers.depth.6=10000

globallad.containers.depth.7.description=Data depth of the Global LAD data buffer for SSE EVR data.
globallad.containers.depth.7=10000

globallad.socketServer.port.description=The socket server port that chill_down will connect to to send \
data to the Global LAD.
globallad.socketServer.port.validValues=0 to 65535
globallad.socketServer.port=8900

globallad.jmsServer.rootTopics.description=The root JMS topics to subsribe to for EHA and EVR messages
globallad.jmsServer.rootTopics.formatHint=Comma delimited list of root topics. The EHA and EVR subtopics are inferred.
globallad.jmsServer.rootTopics.behaviorNotes=Only applicable in JMS mode. When provided, these topics will be the only \
  root topics the GLAD receives telemtry from. All options for venue (ie, downlink hostname, venue type, testbed name, \
  and downlink stream id) will be ignored.
globallad.jmsServer.rootTopics.validValues=DEFAULT or JMS topics (eg, mpcs.mission.host.session,mpcs.mission.testbedName.downlinkStreamId)
globallad.jmsServer.rootTopics=DEFAULT

globallad.jmsServer.hostName.description=The hostname of the downlink processor
globallad.jmsServer.hostName.behaviorNotes=Only applicable in JMS mode. Used to construct default JMS topics. \
  Defaults to local hostname (not necessarily "localhost")
globallad.jmsServer.hostName=

globallad.dataSource.description=The source of data received by the GLAD. Defaults to SOCKET_SERVER
globallad.dataSource.behaviorNotes=Set to socket server for receiving telemetry from chill_down via socket. Set to JMS \
  to receive telemetry from the JMS bus.
globallad.dataSource.validValues=SOCKET | JMS
globallad.dataSource=SOCKET

globallad.server.blockDescription=Configuration properties for the Global LAD server.

globallad.server.retrycount.description=The number of retries performed by chill_down when its attempt to connect to the Global LAD fails
globallad.server.retrycount.validValues=1 to Integer.MAX_VALUE
globallad.server.retrycount=15

globallad.server.retrydelay.description=The number of milliseconds chill_down sleeps between retry attempts to connect to the Global LAD.
globallad.server.retrydelay.validValues=1 to Integer.MAX_VALUE
globallad.server.retrydelay=2000

globallad.server.host.description=The host name for both the socket server and the Global LAD REST server.
globallad.server.host.formatHint=Must be a unix host name or IP address.
globallad.server.host=localhost

globallad.disruptor.blockDescription=Settings for the numerous LMAX disruptors used in the Global LAD data flow. 

globallad.disruptor.globallad.inserters.description=Number of disruptor event handlers to use to insert data into the Global LAD.
globallad.disruptor.globallad.inserters.behavioralNotes=This value can greatly effect performance and changing it from the default \
should be considered carefully.  
globallad.disruptor.globallad.inserters=4

globallad.disruptor.client.ringBufferSize.description=Ring buffer size for each client to pass data to the data constructor. 
globallad.disruptor.client.ringBufferSize.behavioralNotes=This value is critical.  Setting it too low can cause chill_down to \
block on the socket write and setting it too high can cause the Global LAD application to run out of memory.  The default value \
should only have to be changed if an extremely high throughput to the Global LAD is expected (100 - 200 Mbits).  
globallad.disruptor.client.ringBufferSize=65536

globallad.disruptor.globallad.ringBufferSize.description=Ring buffer size for the Global LAD inserter disruptor.
globallad.disruptor.globallad.ringBufferSize=65536

globallad.disruptor.wait.downlink.description=Wait strategy for the lmax disruptor used in the Global LAD downlink service. 
globallad.disruptor.wait.downlink.behavioralNotes=Refer to the lmax disruptor wait strategy documentation found online for \
more information: https://github.com/LMAX-Exchange/disruptor/wiki/Getting-Started.
globallad.disruptor.wait.downlink.validValues=block | sleep | yield | spin
globallad.disruptor.wait.downlink=block

globallad.disruptor.wait.client.description=Wait strategy for the lmax disruptor used in the Global LAD client to pass data to \
the data message constructors.
globallad.disruptor.wait.client.behavioralNotes=Refer to the lmax disruptor wait strategy documentation found online for \
more information: https://github.com/LMAX-Exchange/disruptor/wiki/Getting-Started.
globallad.disruptor.wait.client.validValues=block | sleep | yield | spin
globallad.disruptor.wait.client=block

globallad.disruptor.wait.globallad.description=Wait strategy for the lmax disruptor used in the Global LAD for the Global LAD \
data inserters.  
globallad.disruptor.wait.globallad.behavioralNotes=Refer to the lmax disruptor wait strategy documentation found online for \
more information: https://github.com/LMAX-Exchange/disruptor/wiki/Getting-Started.
globallad.disruptor.wait.globallad.validValues=block | sleep | yield | spin
globallad.disruptor.wait.globallad=block

globallad.disruptor.downlink.threshold.description=Percentage thresholds for the downlink performance data keeping track of the disruptor ring buffer backlog.

globallad.disruptor.downlink.threshold.yellow.description=Ring buffer backlog considered to be a yellow warning level, as a percentage of buffer size.
globallad.disruptor.downlink.threshold.yellow.validValues=0 to 100
globallad.disruptor.downlink.threshold.yellow=60

globallad.disruptor.downlink.threshold.red.description=Ring buffer backlog considered to be a red warning level, as a percentage of buffer size.
globallad.disruptor.downlink.threshold.red.validValues=[value of globallad.disruptor.downlink.threshold.yellow] + 1 to 100
globallad.disruptor.downlink.threshold.red=80

globallad.disruptor.downlink.ringBufferSize.description=Disruptor ring buffer size for messages to be passed to the Global LAD within chill_down.
globallad.disruptor.downlink.ringBufferSize=65536

globallad.containers.reaping.blockDescription=Configuration properties that control reaping (purging of odl context) from the Global LAD \
data containers.

globallad.containers.reaping.interval.description="Amount of time between reap cycles in seconds"
globallad.containers.reaping.interval=10

globallad.containers.reaping.enabled.description=Enables/disables automatic reaping of stale data from the Global LAD data stores.
globallad.containers.reaping.enabled.validValues=true | false
globallad.containers.reaping.enabled=true

globallad.containers.reaping.memory.threshold.description="Percentage of memory used as reported by the java Runtime before corrective actions is attempted to protect the global lad."
globallad.containers.reaping.memory.validValues=Must be an interger value between 80 and 99.
globallad.containers.reaping.memory.threshold=80

globallad.containers.reaping.level.description=The data container level at which stale data reaping will take place.
globallad.containers.reaping.level.behavioralNotes=Reaping will take place on this level only.  All children under the container at this level will need to be \
reapable and expired for the container to be removed.  Note that this defines the level, meaning the container type, at which the reaping is taking place, not the \
level that will be reaped from.  As an example, if the data levels are defined as 'host -> venue -> sessionNumber -> udt -> identifier' and the reaping.level is \
set to venue, sessionNumber containers are the ones that will be deleted."
globallad.containers.reaping.level.validValues=host | scid | venue | sessionNumber | vcid | dssId | userDataType.
globallad.containers.reaping.level=venue

globallad.containers.reaping.[GLAD_CONTAINER_TYPE].[CONTAINER_TYPE_VALUE].description=Reaping times can be defined for any container type / container type value at any level \
of the Global LAD data tree.  The '[GLAD_CONTAINER_TYPE]' defines which container type and the '[CONTAINER_TYPE_VALUE]' describes the run time value.  
globallad.containers.reaping.[GLAD_CONTAINER_TYPE].[CONTAINER_TYPE_VALUE].behavioralNotes=Reaping can be defined at multiple levels and the time value will be inherited \
from ancestors.  However, a container that has a reaping value set that differs from their ancestor will use the configured reaping time value, and all of that container's \
ancestors will inherit the new reaping time value.
globallad.containers.reaping.[GLAD_CONTAINER_TYPE].[CONTAINER_TYPE_VALUE].validValues=host | scid | venue | sessionNumber | vcid | dssId | userDataType.

globallad.containers.reaping.venue.description=Set the number of minutes a container can live without being referenced at a certain data container level.
globallad.containers.reaping.venue.behavioralNotes=Containers with no reaping value will never be reaped and will live forever or until a user prunes them from the lad.
globallad.containers.reaping.venue.formatHint=The venue is the last value of the property name and the value is the number of minutes the \
session can live without being either written to or read from before it will be automatically reaped from the lad.  \
EXAMPLE: globallad.containers.reaping.venue.ATLO=5, This would mean that any unused ATLO session would be reaped after 5 minutes of not being accessed.
globallad.containers.reaping.venue.TESTSET.description=Set the number of minutes a container can live without being referenced at a certain data container level.
globallad.containers.reaping.venue.TESTSET=60
globallad.containers.reaping.venue.FSWTS.description=Set the number of minutes a container can live without being referenced at a certain data container level.
globallad.containers.reaping.venue.FSWTS=60

globallad.output.csv.blockDescription=Configuration properties that control the CVS output from Global LAD queries.

globallad.output.csv.columns.description=Specify the fields to use for the CSV query outputs and the order of those columns. 
globallad.output.csv.columns.behavioralNotes=These output values are defined for use with applications like chill_return_lad_chanvals CSV output.

globallad.output.csv.columns.eha.description=Comma-separated list of CSV columns and their order for Global LAD EHA (channel) query output. All eha user data types will conform to the columns defined.
globallad.output.csv.columns.eha.validValues=sessionNumber | host | venue | scid | channelId | dssId | vcid | ert | scet | sclk | lst | eventTime | insertNumber | dn | channelType | eu | status | dnAlarmState | dnAlarmLevel | euAlarmState | euAlarmLevel | isRealTime
globallad.output.csv.columns.eha=sessionNumber,host,venue,scid,channelId,dssId,vcid,ert,scet,sclk,lst,eventTime,insertNumber,dn,channelType,eu,status,dnAlarmState,dnAlarmLevel,euAlarmState,euAlarmLevel,isRealTime

globallad.output.csv.columns.evr.description=Comma-separated list of CSV columns and their order for Global LAD EVR query output. All evr user data types will conform to the columns defined.
globallad.output.csv.columns.evr.validValues=sessionNumber | host | venue | scid | evrLevel | evrName | evrId | dssId | vcid | ert | scet | sclk | lst | eventTime | insertNumber | message | isRealTime | TaskName | SequenceId | CategorySequenceId | AddressStack | Source | TaskId | errno
globallad.output.csv.columns.evr=sessionNumber,host,venue,scid,evrLevel,evrName,evrId,dssId,vcid,ert,scet,sclk,lst,eventTime,insertNumber,message,isRealTime,TaskName,SequenceId,CategorySequenceId,AddressStack,Source,TaskId,errno

globallad.output.csv.columns.lm_eha.description=Used for chill_check_channel.  Is a special output format that will only quote strings if they need to be quoted.
globallad.output.csv.columns.lm_eha.validValues = channelId | dn | eu | status | ert | scet | sclk
globallad.output.csv.columns.lm_eha=channelId,dn,eu,status,ert,scet,sclk

globallad.persistence.blockDescription=Configuration properties that control Global LAD backup/persistence to disk.

globallad.persistence.description=Options for persisting the Global LAD.

globallad.persistence.backup.doBackup.description=Indicates whether or not to enable automatic Global LAD persistence.
globallad.persistence.backup.doBackup.validValues=true | false
globallad.persistence.backup.doBackup=false

globallad.persistence.backup.directory.description=Base directory for Global LAD backup files to be saved to.
globallad.persistence.backup.directory.behavioralNotes=If no directory is defined and persistence is enabled, \
a temporary directory will be created using the Java temp directory paradigm, which in most cases will go to /tmp. \
If persistence is enable it is advised that the backup directory also be configured.
globallad.persistence.backup.directory.formatHint=Full unix path to a directory to save backup to.  The directory will be created \
if it does not already exist.
globallad.persistence.backup.directory=/tmp

globallad.persistence.backup.basename.description=The base file name for each backup file created.
globallad.persistence.backup.basename.behavioralNotes=The base name plus a unix time stamp will be used for each file.  This value must \
be set. There is no internal default value that will be used.  
globallad.persistence.backup.basename=glad_backup

globallad.persistence.backup.maxBackups.description=The maximum number of backups created for persistence.
globallad.persistence.backup.maxBackups.validValues=0 to Integer.MAX_VALUE
globallad.persistence.backup.maxBackups.behavioralNotes=If this value is less than or equal to 0 there is no limit on the number of backups that will be saved.
globallad.persistence.backup.maxBackups=1

globallad.persistence.backup.maxSize.description=Specify the max size of all the saved backups in giga-bytes.
globallad.persistence.backup.maxSize.formatHint=Float value, which is a fraction of giga-bytes. 
globallad.persistence.backup.maxSize.validValues=0.0 to Float.MAX_VALUE
globallad.persistence.backup.maxSize.behavioralNotes=The Global LAD will make a backup and then it will calculate the \
size of all the backups combined.  If this number is greater than the configured value it will trim the older backups until \
the total size of backups are less than the configured value.  In no case will the current backup be trimmed. If zero or less, there is no \
limit to the size of backups.
globallad.persistence.backup.maxSize=0.1

globallad.persistence.backup.interval.description=Number of seconds between backups.
globallad.persistence.backup.interval.validValues=1 to Integer.MAX_VALUE
globallad.persistence.backup.interval=300

globallad.containers.childContainers.blockDescription=Configuration properties that affect how Global LAD data is organized into a \
tree hierarchy.

globallad.containers.childContainers.[GLAD_CONTAINER_TYPE].description=Properties with this pattern collectively define the parent and child container relationship for the Global LAD tree structure.\
The parent container type is the last value in the property name. The child container is identified by the property's value.
globallad.containers.childContainers.[GLAD_CONTAINER_TYPE].behavioralNotes=The top level container is always 'master' and the last child \
in the tree will always be 'identifier.'  There must be at least one mapping, which would map master to identifier. \
If a value is not configured to be at the container level it will be assumed to be a data level filter. 
globallad.containers.childContainers.[GLAD_CONTAINER_TYPE].validValues=host | scid | venue | sessionNumber | vcid | dssId | userDataType | identifier.

globallad.containers.childContainers.master.description=Define what type of child container the 'master' container holds. The master container must always be mapped.
globallad.containers.childContainers.master=host

globallad.containers.childContainers.host.description=Define what type of container the 'host' container holds.
globallad.containers.childContainers.host=venue

globallad.containers.childContainers.venue.description=Define what type of container the 'venue' container holds.
globallad.containers.childContainers.venue=sessionNumber

globallad.containers.childContainers.sessionNumber.description=Define what type of container the 'sessionNumber' container holds.
globallad.containers.childContainers.sessionNumber=vcid

globallad.containers.childContainers.vcid.description=Define what type of container the 'vcid' container holds.
globallad.containers.childContainers.vcid=userDataType

globallad.containers.childContainers.userDataType.description=Define what type of container the 'userDataType' container holds.
globallad.containers.childContainers.userDataType=identifier

globallad.downlink.sink.publishRetry.description=Used by the Global LAD downlink service.  This is the number of times the service will \
attempt to retry adding a globallad event to the ring buffer to be pushed to the Global LAD server.  If it was unsuccessful after this number of \
retries the Global LAD downlink service will start dropping data after the first failure to add.  
globallad.downlink.sink.publishRetry=10

globallad.downlink.sink.publishRetryInterval.description=Used by the globallad downlink service.  This is the interval (in milliseconds) between \
consecutive attempts to retry adding a globallad event to the ring buffer to be pushed to the globallad server.
globallad.downlink.sink.publishRetryInterval=500

# Unused level configurations.  These values must not be configured, but leaving them in as examples for these.
# globallad.containers.childContainers.scid.description=Define what type of container the 'scid' container holds.
# globallad.containers.childContainers.scid=venue

# globallad.containers.childContainers.dssId.description=Define what type of container the 'dssId' container holds.
# globallad.containers.childContainers.dssId=userDataType

################### Internal Properties - Not for Customer modification #########################

globallad.internal.blockDescription=Internal Global LAD properties.

globallad.internal.dataFactoryClass.description=The fully-qualified name of the data factory class used to create Global LAD data objects from byte arrays.
globallad.internal.dataFactoryClass=jpl.gds.globallad.data.factory.GenericGlobalLadDataFactory

globallad.internal.containers.ringBuffer.description=The fully-qualified name of the ring buffer class that holds the actual Global LAD data objects in memory.
globallad.internal.containers.ringBuffer=jpl.gds.globallad.data.container.buffer.SortedSetGlobalLadDataBuffer

