/**
 * Copyright 2006-2018. California Institute of Technology.
 * ALL RIGHTS RESERVED.
 * U.S. Government sponsorship acknowledged.
 *
 * This software is subject to U. S. export control laws and
 * regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
 * extent that the software is subject to U.S. export control laws
 * and regulations, the recipient has the responsibility to obtain
 * export licenses or other export authority as may be required
 * before exporting such information to foreign countries or
 * providing access to foreign nationals.
 */
 /**
 * AMPCS common protobuf schema for EHA primitives.
 *
 * Version: 1.0
 * ChangeLog:
 * V1.0 - New for R8
 */
syntax = "proto3";

package eha;

option optimize_for = SPEED;
option java_multiple_files = true;
option java_package = "jpl.gds.eha.api.channel.serialization";
option java_outer_classname = "ProtoBufEhaPrimitiveSerialization";

 /**
  * Channel Specific Enums and Messages
  */
enum Proto3DnType {
	/**
	 * Data type of the channel Data Number is unknown or undefined.
	 */
	DN_TYPE_UNKNOWN = 0;

	/**
	 * Data type of the channel Data Number is signed integer.
	 */
	DN_TYPE_SIGNED_INT = 1;

	/**
	 * Data type of the channel Data Number is unsigned integer.
	 */
	DN_TYPE_UNSIGNED_INT = 2;

	/**
	 * Data type of the channel Data Number is an unsigned integer
	 * and channel value display should be formatted in hex.
	 */
	DN_TYPE_DIGITAL = 3;

	/**
	 * Data type of the channel Data Number is a signed integer that
	 * can be mapped to a symbolic state. (i.e., an enum)
	 */
	DN_TYPE_STATUS = 4;

	/**
	 * Data type of the channel Data Number is an IEEE floating point number.
	 */
	DN_TYPE_FLOAT = 5;

	/**
	 * Data type of the channel Data Number is a string of ASCII characters.
	 */
	DN_TYPE_ASCII = 6;

	/**
	 * Data type of the channel Data Number is unsigned integer, for which non-zero
	 * values can be considered a TRUE value, and 0 values can be considered a FALSE
	 * value.
	 */
	DN_TYPE_BOOLEAN = 7;

	/**
	 * Data type of the channel is a coarse SCLK time.
	 */
	DN_TYPE_TIME = 8;
}


 
enum Proto3ChanDefType {
	/**
	 * UNKNOWN Channel Definition Type
	 */
	CHAN_DEF_TYPE_UNKNOWN = 0;

	/**
     * Channel comes from flight telemetry, or is derived
     * from other channels from that source.
     */
	CHAN_DEF_TYPE_FSW = 1;

	/**
	 * Channel comes from SSE/GSE telemetry, or is derived from other
	 * channels from that source.
	 */
	CHAN_DEF_TYPE_SSE = 2;

	/**
	 * Channel is a ground channel that comes from station monitor data, or
	 * is derived from channels from that source.
	 */
	CHAN_DEF_TYPE_M = 3;

	/**
	 * Channel is a ground channel that is extracted from telemetry headers.
	 */
	CHAN_DEF_TYPE_H = 4;
}


message Proto3Dn {
	Proto3DnType type = 1;
	oneof dn {
		float _float = 2;
		double _double = 3;
		int32 _int = 4;
		uint32 _uint = 5;
		int64 _long = 6;
		uint64 _ulong = 7;
		bool _bool = 8;
		string _string = 9;
	}
}
