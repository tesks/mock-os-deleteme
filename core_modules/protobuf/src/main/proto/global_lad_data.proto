 /**
 * Copyright 2006-2018. California Institute of Technology.
 * ALL RIGHTS RESERVED.
 * U.S. Government sponsorship acknowledged.
 *
 * This software is subject to U. S. export control laws and
 * regulations (22 C.F.R. 120-130 and 15 C.F.R. 730-774). To the
 * extent that the software is subject to U.S. export control laws
 * and regulations, the recipient has the responsibility to obtain
 * export licenses or other export authority as may be required
 * before exporting such information to foreign countries or
 * providing access to foreign nationals.
 */
 /**
 * AMPCS common protobuf schema for GLlobal LAD Data.
 *
 * Version: 1.0
 * ChangeLog:
 * V1.0 - New for R8
 */
syntax = "proto3";

package glad;

import "primitives/time_primitives.proto";
import "alarm_value_set.proto";
import "alarm_table.proto";

option optimize_for = SPEED;
option java_multiple_files = true;
option java_package = "jpl.gds.serialization.globallad.data";

/**
 * This is the base object for a global lad data object that holds all the
 * basic information.
 */
message Proto3BaseGladData {
	oneof hasErt { Proto3Adt ert = 1; }
	oneof hasScet { Proto3Adt scet = 2; }
	oneof hasSclk { Proto3Sclk sclk = 3; }
	oneof hasLst { Proto3Lst lst = 4; }
	oneof hasEventTime { int64 eventTime = 5; }

	int32 userDataType = 6;
	int32 scid = 7;
	int32 dssId = 8;
	int32 vcid = 9;
	int64 sessionNumber = 10;
	string venue = 11;
	string host = 12;
}

/**
 * Definition for EHA glad data object.
 */
message Proto3EhaGladData {
	string channelId = 1;
	int32 dnType = 2;
	bytes dnBytes = 3;
	bytes euBytes = 4;
	string status = 5;
	bool isRealtime = 6;
	bool isHeader = 7;
	bool isMonitor = 8;
	bool isSse = 9;
	bool isFsw = 10;

	Proto3BaseGladData base = 11;
	Proto3AlarmValueSet alarms = 12;
}

/**
 * Definition for EVR glad data object.
 */
message Proto3EvrGladData {
	int64 evrId = 1;
	string level = 2;
	bool isRealtime = 3;
	bool isSse = 4;
	bytes evrNameRaw = 5;
	bytes messageRaw = 6;
	bytes taskNameRaw = 7;
	bytes sequenceIdRaw = 8;
	bytes categorySequenceIdRaw = 9;
	bytes addressStackRaw = 10;
	bytes sourceRaw = 11;
	bytes taskIdRaw = 12;
	bytes errnoRaw = 13;

	Proto3BaseGladData base = 14;
}

message Proto3AlarmHistoryGladData {
	Proto3BaseGladData base = 1;
	Proto3AlarmHistory history = 2;
}

/**
 * This is used to package the data and allow for it to be any type
 * of global lad data object along with the user data type, and takes a lot
 * of the work out of the java code.
 */
message Proto3GlobalLadTransport {

	oneof gladData {
		/**
		 * If we add any other type of global lad data objects, just add those new options
		 * to this one of block.
		 */
		Proto3EhaGladData eha = 1;
		Proto3EvrGladData evr = 2;
		Proto3AlarmHistoryGladData history = 4;
		}
}
