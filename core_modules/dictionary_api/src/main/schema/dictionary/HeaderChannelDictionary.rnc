#
# Multi-mission header channel dictionary schema.
#     
# Defines channels that are extracted from telemetry headers,
# include CCSDS and SFDU headers. These definitions vary from mission
# to mission.
#
# Copyright (c) 2013 California Institute of Technology, All Rights Reserved
# JPL Proprietary Information
#
# Change Log:
#   V1.0  Date Unknown   Various authors 
#   V1.1  05/30/13       Imported common schema. Major
#                        commenting and re-organization
#

# Include common monitor/header definitions
include "MonitorHeaderCommonDictionary.rnc"

# Start XML document here
start = header-channel-dictionary-def

# The header channel dictionary root element
header-channel-dictionary-def =

    element HeaderChannelDictionary {
    
       # Standard dictionary version header and general change log 
        header-def, 
        
        # This is the details information about each channel.
        header-channels-def
    }
    
# Defines the list of header channels, both original/basic and derived  
header-channels-def = element channels { (header-channel-def | derived-header-channel-def)+ }

# The definiton for an original/basic header channel, i.e., a channel that is decommed
# straight from a telemetry header.
header-channel-def =

    element header_channel {

        # Indicates whether this channel should be generated by the GDS
        active-def,
        
        # Header channel IDs start with "H-" and range from 0 to 9999.
        m-h-channel-id-def,
        
        # The measurement ID for the channel. This is its unique index within the
        # header channel dictionary and happens to match the channel number.
        attribute measurement_id { measurement-id-range-def },

       # Operational category
        ops-cat-def,
        
        # Subsystem
        subsystem-def,

        # Channel name displayed by GDS tools
        channel-name-def,
        
        # The channel data type
        channel-type-def,

         # Units associated with the channel DN. 
        channel-units-def,
        
        # Optional display format for the channel DN. 
        io-format-def?,

        # Source from which this channel's values are
        # obtained/extracted. In case the channel is available in both
        # packet/frame and SFDU, both sources can be defined but SFDU
        # source will take precedence when SFDU data is available.
        (
            (packet-source-def | frame-source-def | sfdu-source-def) |
            (packet-source-def, sfdu-source-def) |
            (frame-source-def, sfdu-source-def)
        ),
     
        # An optional description of the channel. May be multi-line.
        comment-def?,
        
        # If a status channel, these are the valid state values.
        states-def?,
        
        # Optional: data number to engineering units conversion.
        # Works only to convert integer or floating-point to floating-point.
        dn-eu-conversion-def?
    }
    
# For header channels extracted from CCSDS packet headers.
# Defines information about the source field from which the
# channel's values should be obtained/extracted (basically an
# enumeration of packet header fields defined in Flight-Ground
# ICD)
packet-source-def =
    element packet_source {
        "PACKET_VERSION_NUMBER"
        | "PACKET_TYPE"
        | "SECONDARY_HEADER_FLAG"
        | "APID"
        | "SEQUENCE_FLAGS"
        | "PACKET_SEQUENCE_COUNT"
        | "PACKET_DATA_LENGTH"
        | "COARSE_SPACECRAFT_TIME"
        | "FINE_SPACECRAFT_TIME"
    }

# For header channels extracted from CCSDS frame headers.
# Defines information about the source field from which the
# channel's values should be obtained/extracted (basically an
# enumeration of transfer frame header fields defined in Flight-Ground
# ICD)
frame-source-def =
    element frame_source {
        "TRANSFER_FRAME_VERSION_NUMBER"
        | "SPACECRAFT_ID"
        | "VCID"
        | "VCFC"
        | "REPLAY_FLAG"
        | "VC_FRAME_COUNT_USAGE_FLAG"
        | "VC_FRAME_COUNT_CYCLE"
        | "OPERATIONAL_CONTROL"
        | "MCID"
        | "MFC"
        | "SECONDARY_HEADER_FLAG"
        | "PACKET_SEQ_FLAG"
        | "PACKET_ORDER"
        | "PACKET_SEGMENT_LENGTH_ID"
        | "FIRST_PACKET_POINTER"
    }

# For header channels extracted from SFDU headers.
# Defines the SFDU source field from which the 
# channel's values should be obtained/extracted.
sfdu-source-def =
    # The value of this element must match the value of a "fieldId" attribute
    # on a Field element in the chdo.xml file. This links the header channel
    # to that field in the CHDO SFDU.
    element sfdu_source { non-empty-token-def }

# Derived channels can be of two types. The ground derived by Java uses a 
# coded Java class to reprocess one or more parent channel
# values into new channel values. The ground derived by bit unpacking extracts
# and packs bits from one parent channel value into one new channel value.
derived-header-channel-def =
    header-derivation-by-java-def | header-derivation-by-bit-unpacking-def

# Defines a header channel created via Java derivation
header-derivation-by-java-def =

    element header_derivation_by_java {
    
        # Indicates whether this channel should be generated by the GDS
        active-def,
        
        # Header channel IDs start with "H-" and range from 0 to 9999.
        m-h-channel-id-def,
        
        # The measurement ID for the channel. This is its unique index within the
        # header channel dictionary and happens to match the channel number.
        attribute measurement_id { measurement-id-range-def },
       
        # Operational category
        ops-cat-def,
        
        # Subsystem
        subsystem-def,

        # Channel name displayed by GDS tools
        channel-name-def,
        
        # The channel data type
        channel-type-def,
              
        # Units associated with the channel DN. 
        channel-units-def,
        
        # Optional display format for the channel DN. 
        io-format-def?,
        
        # An optional description of the channel. May be multi-line.
        comment-def?,
        
        # If a status channel, these are the valid state values.
        states-def?,
             
        # Optional: data number to engineering units conversion.
        # Works only to convert integer or floating-point to floating-point.
        dn-eu-conversion-def?,
        
        # The definition of the Java derivation that produces this channel
        derivation-java-def
    }
    
# Defines a header channel derived by bit unpack   
header-derivation-by-bit-unpacking-def =

    element header_derivation_by_bit_unpacking {
    
        # Indicates whether this channel should be generated by the GDS
        active-def,
        
        # Header channel IDs start with "H-" and range from 0 to 9999.
        m-h-channel-id-def,
        
        # The measurement ID for the channel. This is its unique index within the
        # header channel dictionary and happens to match the channel number.
        attribute measurement_id { measurement-id-range-def },
       
        # Operational category
        ops-cat-def,
        
        # Subsystem
        subsystem-def,

        # Channel name displayed by GDS tools
        channel-name-def,
        
        # The resulting data type of the bit unpacking operation.
        attribute type { int-channel-type-list-def },
        
        # The units associated with the channel DN
        channel-units-def,
        
        # Optional display format for the channel DN
        io-format-def?,
     
        # An optional description of the channel. May be multi-line.
        comment-def?,
        
        # If a status channel, these are the valid state values.
        states-def?,
        
        # Optional: data number to engineering units conversion.
        # Works only to convert integer or floating-point to floating-point.
        dn-eu-conversion-def?,
        
        # The definitions of the bit unpack operation
        derivation-bitunpack-def
    }
    
# Hard-coded operational category for header channels.
ops-cat-def = attribute ops_cat { "H" }
        
# Hard-coded subsystem for header channels.
subsystem-def = attribute subsystem { "HDR" }

# Valid values for active attribute. 
# "YES" means that the GDS should extract and publish data for
# this channel as defined. "NO" tells the GDS to ignore this
# channel definition.
active-def =  attribute active { "YES" | "NO" }


